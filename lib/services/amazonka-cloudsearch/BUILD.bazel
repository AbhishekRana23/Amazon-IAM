load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-cloudsearch/amazonka-cloudsearch.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-cloudsearch",
    srcs = [
        "gen/Network/AWS/CloudSearch.hs",
        "gen/Network/AWS/CloudSearch/BuildSuggesters.hs",
        "gen/Network/AWS/CloudSearch/CreateDomain.hs",
        "gen/Network/AWS/CloudSearch/DefineAnalysisScheme.hs",
        "gen/Network/AWS/CloudSearch/DefineExpression.hs",
        "gen/Network/AWS/CloudSearch/DefineIndexField.hs",
        "gen/Network/AWS/CloudSearch/DefineSuggester.hs",
        "gen/Network/AWS/CloudSearch/DeleteAnalysisScheme.hs",
        "gen/Network/AWS/CloudSearch/DeleteDomain.hs",
        "gen/Network/AWS/CloudSearch/DeleteExpression.hs",
        "gen/Network/AWS/CloudSearch/DeleteIndexField.hs",
        "gen/Network/AWS/CloudSearch/DeleteSuggester.hs",
        "gen/Network/AWS/CloudSearch/DescribeAnalysisSchemes.hs",
        "gen/Network/AWS/CloudSearch/DescribeAvailabilityOptions.hs",
        "gen/Network/AWS/CloudSearch/DescribeDomainEndpointOptions.hs",
        "gen/Network/AWS/CloudSearch/DescribeDomains.hs",
        "gen/Network/AWS/CloudSearch/DescribeExpressions.hs",
        "gen/Network/AWS/CloudSearch/DescribeIndexFields.hs",
        "gen/Network/AWS/CloudSearch/DescribeScalingParameters.hs",
        "gen/Network/AWS/CloudSearch/DescribeServiceAccessPolicies.hs",
        "gen/Network/AWS/CloudSearch/DescribeSuggesters.hs",
        "gen/Network/AWS/CloudSearch/IndexDocuments.hs",
        "gen/Network/AWS/CloudSearch/Lens.hs",
        "gen/Network/AWS/CloudSearch/ListDomainNames.hs",
        "gen/Network/AWS/CloudSearch/Types.hs",
        "gen/Network/AWS/CloudSearch/Types/AccessPoliciesStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/AlgorithmicStemming.hs",
        "gen/Network/AWS/CloudSearch/Types/AnalysisOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/AnalysisScheme.hs",
        "gen/Network/AWS/CloudSearch/Types/AnalysisSchemeLanguage.hs",
        "gen/Network/AWS/CloudSearch/Types/AnalysisSchemeStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/AvailabilityOptionsStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/DateArrayOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/DateOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/DocumentSuggesterOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/DomainEndpointOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/DomainEndpointOptionsStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/DomainStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/DoubleArrayOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/DoubleOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/Expression.hs",
        "gen/Network/AWS/CloudSearch/Types/ExpressionStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/IndexField.hs",
        "gen/Network/AWS/CloudSearch/Types/IndexFieldStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/IndexFieldType.hs",
        "gen/Network/AWS/CloudSearch/Types/IntArrayOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/IntOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/LatLonOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/Limits.hs",
        "gen/Network/AWS/CloudSearch/Types/LiteralArrayOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/LiteralOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/OptionState.hs",
        "gen/Network/AWS/CloudSearch/Types/OptionStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/PartitionInstanceType.hs",
        "gen/Network/AWS/CloudSearch/Types/ScalingParameters.hs",
        "gen/Network/AWS/CloudSearch/Types/ScalingParametersStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/ServiceEndpoint.hs",
        "gen/Network/AWS/CloudSearch/Types/Suggester.hs",
        "gen/Network/AWS/CloudSearch/Types/SuggesterFuzzyMatching.hs",
        "gen/Network/AWS/CloudSearch/Types/SuggesterStatus.hs",
        "gen/Network/AWS/CloudSearch/Types/TLSSecurityPolicy.hs",
        "gen/Network/AWS/CloudSearch/Types/TextArrayOptions.hs",
        "gen/Network/AWS/CloudSearch/Types/TextOptions.hs",
        "gen/Network/AWS/CloudSearch/UpdateAvailabilityOptions.hs",
        "gen/Network/AWS/CloudSearch/UpdateDomainEndpointOptions.hs",
        "gen/Network/AWS/CloudSearch/UpdateScalingParameters.hs",
        "gen/Network/AWS/CloudSearch/UpdateServiceAccessPolicies.hs",
        "gen/Network/AWS/CloudSearch/Waiters.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
        "-DVERSION_amazonka_cloudsearch=\"2.0\"",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-cloudsearch/amazonka-cloudsearch.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-cloudsearch-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/CloudSearch.hs",
        "test/Test/AWS/CloudSearch/Internal.hs",
        "test/Test/AWS/Gen/CloudSearch.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-threaded",
        "-DVERSION_amazonka_cloudsearch=\"2.0\"",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-cloudsearch",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
