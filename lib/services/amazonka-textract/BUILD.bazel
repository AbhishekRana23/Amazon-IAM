load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-textract/amazonka-textract.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-textract",
    srcs = [
        "gen/Network/AWS/Textract.hs",
        "gen/Network/AWS/Textract/AnalyzeDocument.hs",
        "gen/Network/AWS/Textract/AnalyzeExpense.hs",
        "gen/Network/AWS/Textract/DetectDocumentText.hs",
        "gen/Network/AWS/Textract/GetDocumentAnalysis.hs",
        "gen/Network/AWS/Textract/GetDocumentTextDetection.hs",
        "gen/Network/AWS/Textract/Lens.hs",
        "gen/Network/AWS/Textract/StartDocumentAnalysis.hs",
        "gen/Network/AWS/Textract/StartDocumentTextDetection.hs",
        "gen/Network/AWS/Textract/Types.hs",
        "gen/Network/AWS/Textract/Types/Block.hs",
        "gen/Network/AWS/Textract/Types/BlockType.hs",
        "gen/Network/AWS/Textract/Types/BoundingBox.hs",
        "gen/Network/AWS/Textract/Types/ContentClassifier.hs",
        "gen/Network/AWS/Textract/Types/Document.hs",
        "gen/Network/AWS/Textract/Types/DocumentLocation.hs",
        "gen/Network/AWS/Textract/Types/DocumentMetadata.hs",
        "gen/Network/AWS/Textract/Types/EntityType.hs",
        "gen/Network/AWS/Textract/Types/ExpenseDetection.hs",
        "gen/Network/AWS/Textract/Types/ExpenseDocument.hs",
        "gen/Network/AWS/Textract/Types/ExpenseField.hs",
        "gen/Network/AWS/Textract/Types/ExpenseType.hs",
        "gen/Network/AWS/Textract/Types/FeatureType.hs",
        "gen/Network/AWS/Textract/Types/Geometry.hs",
        "gen/Network/AWS/Textract/Types/HumanLoopActivationOutput.hs",
        "gen/Network/AWS/Textract/Types/HumanLoopConfig.hs",
        "gen/Network/AWS/Textract/Types/HumanLoopDataAttributes.hs",
        "gen/Network/AWS/Textract/Types/JobStatus.hs",
        "gen/Network/AWS/Textract/Types/LineItemFields.hs",
        "gen/Network/AWS/Textract/Types/LineItemGroup.hs",
        "gen/Network/AWS/Textract/Types/NotificationChannel.hs",
        "gen/Network/AWS/Textract/Types/OutputConfig.hs",
        "gen/Network/AWS/Textract/Types/Point.hs",
        "gen/Network/AWS/Textract/Types/Relationship.hs",
        "gen/Network/AWS/Textract/Types/RelationshipType.hs",
        "gen/Network/AWS/Textract/Types/S3Object.hs",
        "gen/Network/AWS/Textract/Types/SelectionStatus.hs",
        "gen/Network/AWS/Textract/Types/TextType.hs",
        "gen/Network/AWS/Textract/Types/Warning.hs",
        "gen/Network/AWS/Textract/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_textract=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-textract/amazonka-textract.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-textract-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/Textract.hs",
        "test/Test/AWS/Textract.hs",
        "test/Test/AWS/Textract/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_textract=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-textract",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
