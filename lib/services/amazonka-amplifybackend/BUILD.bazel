load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-amplifybackend/amazonka-amplifybackend.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-amplifybackend",
    srcs = [
        "gen/Network/AWS/AmplifyBackend.hs",
        "gen/Network/AWS/AmplifyBackend/CloneBackend.hs",
        "gen/Network/AWS/AmplifyBackend/CreateBackend.hs",
        "gen/Network/AWS/AmplifyBackend/CreateBackendAPI.hs",
        "gen/Network/AWS/AmplifyBackend/CreateBackendAuth.hs",
        "gen/Network/AWS/AmplifyBackend/CreateBackendConfig.hs",
        "gen/Network/AWS/AmplifyBackend/CreateToken.hs",
        "gen/Network/AWS/AmplifyBackend/DeleteBackend.hs",
        "gen/Network/AWS/AmplifyBackend/DeleteBackendAPI.hs",
        "gen/Network/AWS/AmplifyBackend/DeleteBackendAuth.hs",
        "gen/Network/AWS/AmplifyBackend/DeleteToken.hs",
        "gen/Network/AWS/AmplifyBackend/GenerateBackendAPIModels.hs",
        "gen/Network/AWS/AmplifyBackend/GetBackend.hs",
        "gen/Network/AWS/AmplifyBackend/GetBackendAPI.hs",
        "gen/Network/AWS/AmplifyBackend/GetBackendAPIModels.hs",
        "gen/Network/AWS/AmplifyBackend/GetBackendAuth.hs",
        "gen/Network/AWS/AmplifyBackend/GetBackendJob.hs",
        "gen/Network/AWS/AmplifyBackend/GetToken.hs",
        "gen/Network/AWS/AmplifyBackend/ImportBackendAuth.hs",
        "gen/Network/AWS/AmplifyBackend/Lens.hs",
        "gen/Network/AWS/AmplifyBackend/ListBackendJobs.hs",
        "gen/Network/AWS/AmplifyBackend/RemoveAllBackends.hs",
        "gen/Network/AWS/AmplifyBackend/RemoveBackendConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types.hs",
        "gen/Network/AWS/AmplifyBackend/Types/AdditionalConstraintsElement.hs",
        "gen/Network/AWS/AmplifyBackend/Types/AuthResources.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAPIAppSyncAuthSettings.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAPIAuthType.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAPIConflictResolution.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAPIResourceConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAuthAppleProviderConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendAuthSocialProviderConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/BackendJobRespObj.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthForgotPasswordConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthIdentityPoolConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthMFAConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthOAuthConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthPasswordPolicyConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthResourceConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/CreateBackendAuthUserPoolConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/DeliveryMethod.hs",
        "gen/Network/AWS/AmplifyBackend/Types/EmailSettings.hs",
        "gen/Network/AWS/AmplifyBackend/Types/LoginAuthConfigReqObj.hs",
        "gen/Network/AWS/AmplifyBackend/Types/MFAMode.hs",
        "gen/Network/AWS/AmplifyBackend/Types/MfaTypesElement.hs",
        "gen/Network/AWS/AmplifyBackend/Types/Mode.hs",
        "gen/Network/AWS/AmplifyBackend/Types/OAuthGrantType.hs",
        "gen/Network/AWS/AmplifyBackend/Types/OAuthScopesElement.hs",
        "gen/Network/AWS/AmplifyBackend/Types/RequiredSignUpAttributesElement.hs",
        "gen/Network/AWS/AmplifyBackend/Types/ResolutionStrategy.hs",
        "gen/Network/AWS/AmplifyBackend/Types/ResourceConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/Service.hs",
        "gen/Network/AWS/AmplifyBackend/Types/Settings.hs",
        "gen/Network/AWS/AmplifyBackend/Types/SignInMethod.hs",
        "gen/Network/AWS/AmplifyBackend/Types/SmsSettings.hs",
        "gen/Network/AWS/AmplifyBackend/Types/SocialProviderSettings.hs",
        "gen/Network/AWS/AmplifyBackend/Types/Status.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthForgotPasswordConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthIdentityPoolConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthMFAConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthOAuthConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthPasswordPolicyConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthResourceConfig.hs",
        "gen/Network/AWS/AmplifyBackend/Types/UpdateBackendAuthUserPoolConfig.hs",
        "gen/Network/AWS/AmplifyBackend/UpdateBackendAPI.hs",
        "gen/Network/AWS/AmplifyBackend/UpdateBackendAuth.hs",
        "gen/Network/AWS/AmplifyBackend/UpdateBackendConfig.hs",
        "gen/Network/AWS/AmplifyBackend/UpdateBackendJob.hs",
        "gen/Network/AWS/AmplifyBackend/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_amplifybackend=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-amplifybackend/amazonka-amplifybackend.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-amplifybackend-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/AmplifyBackend.hs",
        "test/Test/AWS/AmplifyBackend/Internal.hs",
        "test/Test/AWS/Gen/AmplifyBackend.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_amplifybackend=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-amplifybackend",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
