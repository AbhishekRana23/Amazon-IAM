load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-iot-dataplane/amazonka-iot-dataplane.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-iot-dataplane",
    srcs = [
        "gen/Amazonka/IoTData.hs",
        "gen/Amazonka/IoTData/DeleteThingShadow.hs",
        "gen/Amazonka/IoTData/GetRetainedMessage.hs",
        "gen/Amazonka/IoTData/GetThingShadow.hs",
        "gen/Amazonka/IoTData/Lens.hs",
        "gen/Amazonka/IoTData/ListNamedShadowsForThing.hs",
        "gen/Amazonka/IoTData/ListRetainedMessages.hs",
        "gen/Amazonka/IoTData/Publish.hs",
        "gen/Amazonka/IoTData/Types.hs",
        "gen/Amazonka/IoTData/Types/RetainedMessageSummary.hs",
        "gen/Amazonka/IoTData/UpdateThingShadow.hs",
        "gen/Amazonka/IoTData/Waiters.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
        "-DVERSION_amazonka_iot_dataplane=\"2.0\"",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-iot-dataplane/amazonka-iot-dataplane.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-iot-dataplane-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/IoTData.hs",
        "test/Test/Amazonka/IoTData.hs",
        "test/Test/Amazonka/IoTData/Internal.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-threaded",
        "-DVERSION_amazonka_iot_dataplane=\"2.0\"",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-iot-dataplane",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
