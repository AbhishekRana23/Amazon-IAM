{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Kendra.Types.ServiceNowKnowledgeArticleConfiguration
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.Kendra.Types.ServiceNowKnowledgeArticleConfiguration where

import qualified Network.AWS.Core as Core
import Network.AWS.Kendra.Types.DataSourceToIndexFieldMapping
import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Prelude as Prelude

-- | Provides configuration information for crawling knowledge articles in
-- the ServiceNow site.
--
-- /See:/ 'newServiceNowKnowledgeArticleConfiguration' smart constructor.
data ServiceNowKnowledgeArticleConfiguration = ServiceNowKnowledgeArticleConfiguration'
  { -- | A query that selects the knowledge articles to index. The query can
    -- return articles from multiple knowledge bases, and the knowledge bases
    -- can be public or private.
    --
    -- The query string must be one generated by the ServiceNow console. For
    -- more information, see
    -- <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html Specifying documents to index with a query>.
    filterQuery :: Prelude.Maybe Prelude.Text,
    -- | Mapping between ServiceNow fields and Amazon Kendra index fields. You
    -- must create the index field before you map the field.
    fieldMappings :: Prelude.Maybe (Prelude.NonEmpty DataSourceToIndexFieldMapping),
    -- | Indicates whether Amazon Kendra should index attachments to knowledge
    -- articles.
    crawlAttachments :: Prelude.Maybe Prelude.Bool,
    -- | List of regular expressions applied to knowledge articles. Items that
    -- don\'t match the inclusion pattern are not indexed. The regex is applied
    -- to the field specified in the @PatternTargetField@
    excludeAttachmentFilePatterns :: Prelude.Maybe [Prelude.Text],
    -- | The name of the ServiceNow field that is mapped to the index document
    -- title field.
    documentTitleFieldName :: Prelude.Maybe Prelude.Text,
    -- | List of regular expressions applied to knowledge articles. Items that
    -- don\'t match the inclusion pattern are not indexed. The regex is applied
    -- to the field specified in the @PatternTargetField@.
    includeAttachmentFilePatterns :: Prelude.Maybe [Prelude.Text],
    -- | The name of the ServiceNow field that is mapped to the index document
    -- contents field in the Amazon Kendra index.
    documentDataFieldName :: Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'ServiceNowKnowledgeArticleConfiguration' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'filterQuery', 'serviceNowKnowledgeArticleConfiguration_filterQuery' - A query that selects the knowledge articles to index. The query can
-- return articles from multiple knowledge bases, and the knowledge bases
-- can be public or private.
--
-- The query string must be one generated by the ServiceNow console. For
-- more information, see
-- <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html Specifying documents to index with a query>.
--
-- 'fieldMappings', 'serviceNowKnowledgeArticleConfiguration_fieldMappings' - Mapping between ServiceNow fields and Amazon Kendra index fields. You
-- must create the index field before you map the field.
--
-- 'crawlAttachments', 'serviceNowKnowledgeArticleConfiguration_crawlAttachments' - Indicates whether Amazon Kendra should index attachments to knowledge
-- articles.
--
-- 'excludeAttachmentFilePatterns', 'serviceNowKnowledgeArticleConfiguration_excludeAttachmentFilePatterns' - List of regular expressions applied to knowledge articles. Items that
-- don\'t match the inclusion pattern are not indexed. The regex is applied
-- to the field specified in the @PatternTargetField@
--
-- 'documentTitleFieldName', 'serviceNowKnowledgeArticleConfiguration_documentTitleFieldName' - The name of the ServiceNow field that is mapped to the index document
-- title field.
--
-- 'includeAttachmentFilePatterns', 'serviceNowKnowledgeArticleConfiguration_includeAttachmentFilePatterns' - List of regular expressions applied to knowledge articles. Items that
-- don\'t match the inclusion pattern are not indexed. The regex is applied
-- to the field specified in the @PatternTargetField@.
--
-- 'documentDataFieldName', 'serviceNowKnowledgeArticleConfiguration_documentDataFieldName' - The name of the ServiceNow field that is mapped to the index document
-- contents field in the Amazon Kendra index.
newServiceNowKnowledgeArticleConfiguration ::
  -- | 'documentDataFieldName'
  Prelude.Text ->
  ServiceNowKnowledgeArticleConfiguration
newServiceNowKnowledgeArticleConfiguration
  pDocumentDataFieldName_ =
    ServiceNowKnowledgeArticleConfiguration'
      { filterQuery =
          Prelude.Nothing,
        fieldMappings = Prelude.Nothing,
        crawlAttachments = Prelude.Nothing,
        excludeAttachmentFilePatterns =
          Prelude.Nothing,
        documentTitleFieldName =
          Prelude.Nothing,
        includeAttachmentFilePatterns =
          Prelude.Nothing,
        documentDataFieldName =
          pDocumentDataFieldName_
      }

-- | A query that selects the knowledge articles to index. The query can
-- return articles from multiple knowledge bases, and the knowledge bases
-- can be public or private.
--
-- The query string must be one generated by the ServiceNow console. For
-- more information, see
-- <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html Specifying documents to index with a query>.
serviceNowKnowledgeArticleConfiguration_filterQuery :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe Prelude.Text)
serviceNowKnowledgeArticleConfiguration_filterQuery = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {filterQuery} -> filterQuery) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {filterQuery = a} :: ServiceNowKnowledgeArticleConfiguration)

-- | Mapping between ServiceNow fields and Amazon Kendra index fields. You
-- must create the index field before you map the field.
serviceNowKnowledgeArticleConfiguration_fieldMappings :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe (Prelude.NonEmpty DataSourceToIndexFieldMapping))
serviceNowKnowledgeArticleConfiguration_fieldMappings = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {fieldMappings} -> fieldMappings) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {fieldMappings = a} :: ServiceNowKnowledgeArticleConfiguration) Prelude.. Lens.mapping Lens.coerced

-- | Indicates whether Amazon Kendra should index attachments to knowledge
-- articles.
serviceNowKnowledgeArticleConfiguration_crawlAttachments :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe Prelude.Bool)
serviceNowKnowledgeArticleConfiguration_crawlAttachments = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {crawlAttachments} -> crawlAttachments) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {crawlAttachments = a} :: ServiceNowKnowledgeArticleConfiguration)

-- | List of regular expressions applied to knowledge articles. Items that
-- don\'t match the inclusion pattern are not indexed. The regex is applied
-- to the field specified in the @PatternTargetField@
serviceNowKnowledgeArticleConfiguration_excludeAttachmentFilePatterns :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe [Prelude.Text])
serviceNowKnowledgeArticleConfiguration_excludeAttachmentFilePatterns = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {excludeAttachmentFilePatterns} -> excludeAttachmentFilePatterns) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {excludeAttachmentFilePatterns = a} :: ServiceNowKnowledgeArticleConfiguration) Prelude.. Lens.mapping Lens.coerced

-- | The name of the ServiceNow field that is mapped to the index document
-- title field.
serviceNowKnowledgeArticleConfiguration_documentTitleFieldName :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe Prelude.Text)
serviceNowKnowledgeArticleConfiguration_documentTitleFieldName = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {documentTitleFieldName} -> documentTitleFieldName) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {documentTitleFieldName = a} :: ServiceNowKnowledgeArticleConfiguration)

-- | List of regular expressions applied to knowledge articles. Items that
-- don\'t match the inclusion pattern are not indexed. The regex is applied
-- to the field specified in the @PatternTargetField@.
serviceNowKnowledgeArticleConfiguration_includeAttachmentFilePatterns :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration (Prelude.Maybe [Prelude.Text])
serviceNowKnowledgeArticleConfiguration_includeAttachmentFilePatterns = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {includeAttachmentFilePatterns} -> includeAttachmentFilePatterns) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {includeAttachmentFilePatterns = a} :: ServiceNowKnowledgeArticleConfiguration) Prelude.. Lens.mapping Lens.coerced

-- | The name of the ServiceNow field that is mapped to the index document
-- contents field in the Amazon Kendra index.
serviceNowKnowledgeArticleConfiguration_documentDataFieldName :: Lens.Lens' ServiceNowKnowledgeArticleConfiguration Prelude.Text
serviceNowKnowledgeArticleConfiguration_documentDataFieldName = Lens.lens (\ServiceNowKnowledgeArticleConfiguration' {documentDataFieldName} -> documentDataFieldName) (\s@ServiceNowKnowledgeArticleConfiguration' {} a -> s {documentDataFieldName = a} :: ServiceNowKnowledgeArticleConfiguration)

instance
  Core.FromJSON
    ServiceNowKnowledgeArticleConfiguration
  where
  parseJSON =
    Core.withObject
      "ServiceNowKnowledgeArticleConfiguration"
      ( \x ->
          ServiceNowKnowledgeArticleConfiguration'
            Prelude.<$> (x Core..:? "FilterQuery")
            Prelude.<*> (x Core..:? "FieldMappings")
            Prelude.<*> (x Core..:? "CrawlAttachments")
            Prelude.<*> ( x Core..:? "ExcludeAttachmentFilePatterns"
                            Core..!= Prelude.mempty
                        )
            Prelude.<*> (x Core..:? "DocumentTitleFieldName")
            Prelude.<*> ( x Core..:? "IncludeAttachmentFilePatterns"
                            Core..!= Prelude.mempty
                        )
            Prelude.<*> (x Core..: "DocumentDataFieldName")
      )

instance
  Prelude.Hashable
    ServiceNowKnowledgeArticleConfiguration

instance
  Prelude.NFData
    ServiceNowKnowledgeArticleConfiguration

instance
  Core.ToJSON
    ServiceNowKnowledgeArticleConfiguration
  where
  toJSON ServiceNowKnowledgeArticleConfiguration' {..} =
    Core.object
      ( Prelude.catMaybes
          [ ("FilterQuery" Core..=) Prelude.<$> filterQuery,
            ("FieldMappings" Core..=) Prelude.<$> fieldMappings,
            ("CrawlAttachments" Core..=)
              Prelude.<$> crawlAttachments,
            ("ExcludeAttachmentFilePatterns" Core..=)
              Prelude.<$> excludeAttachmentFilePatterns,
            ("DocumentTitleFieldName" Core..=)
              Prelude.<$> documentTitleFieldName,
            ("IncludeAttachmentFilePatterns" Core..=)
              Prelude.<$> includeAttachmentFilePatterns,
            Prelude.Just
              ( "DocumentDataFieldName"
                  Core..= documentDataFieldName
              )
          ]
      )
