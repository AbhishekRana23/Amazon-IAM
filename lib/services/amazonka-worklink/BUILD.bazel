load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-worklink/amazonka-worklink.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-worklink",
    srcs = [
        "gen/Network/AWS/WorkLink.hs",
        "gen/Network/AWS/WorkLink/AssociateDomain.hs",
        "gen/Network/AWS/WorkLink/AssociateWebsiteAuthorizationProvider.hs",
        "gen/Network/AWS/WorkLink/AssociateWebsiteCertificateAuthority.hs",
        "gen/Network/AWS/WorkLink/CreateFleet.hs",
        "gen/Network/AWS/WorkLink/DeleteFleet.hs",
        "gen/Network/AWS/WorkLink/DescribeAuditStreamConfiguration.hs",
        "gen/Network/AWS/WorkLink/DescribeCompanyNetworkConfiguration.hs",
        "gen/Network/AWS/WorkLink/DescribeDevice.hs",
        "gen/Network/AWS/WorkLink/DescribeDevicePolicyConfiguration.hs",
        "gen/Network/AWS/WorkLink/DescribeDomain.hs",
        "gen/Network/AWS/WorkLink/DescribeFleetMetadata.hs",
        "gen/Network/AWS/WorkLink/DescribeIdentityProviderConfiguration.hs",
        "gen/Network/AWS/WorkLink/DescribeWebsiteCertificateAuthority.hs",
        "gen/Network/AWS/WorkLink/DisassociateDomain.hs",
        "gen/Network/AWS/WorkLink/DisassociateWebsiteAuthorizationProvider.hs",
        "gen/Network/AWS/WorkLink/DisassociateWebsiteCertificateAuthority.hs",
        "gen/Network/AWS/WorkLink/Lens.hs",
        "gen/Network/AWS/WorkLink/ListDevices.hs",
        "gen/Network/AWS/WorkLink/ListDomains.hs",
        "gen/Network/AWS/WorkLink/ListFleets.hs",
        "gen/Network/AWS/WorkLink/ListTagsForResource.hs",
        "gen/Network/AWS/WorkLink/ListWebsiteAuthorizationProviders.hs",
        "gen/Network/AWS/WorkLink/ListWebsiteCertificateAuthorities.hs",
        "gen/Network/AWS/WorkLink/RestoreDomainAccess.hs",
        "gen/Network/AWS/WorkLink/RevokeDomainAccess.hs",
        "gen/Network/AWS/WorkLink/SignOutUser.hs",
        "gen/Network/AWS/WorkLink/TagResource.hs",
        "gen/Network/AWS/WorkLink/Types.hs",
        "gen/Network/AWS/WorkLink/Types/AuthorizationProviderType.hs",
        "gen/Network/AWS/WorkLink/Types/DeviceStatus.hs",
        "gen/Network/AWS/WorkLink/Types/DeviceSummary.hs",
        "gen/Network/AWS/WorkLink/Types/DomainStatus.hs",
        "gen/Network/AWS/WorkLink/Types/DomainSummary.hs",
        "gen/Network/AWS/WorkLink/Types/FleetStatus.hs",
        "gen/Network/AWS/WorkLink/Types/FleetSummary.hs",
        "gen/Network/AWS/WorkLink/Types/IdentityProviderType.hs",
        "gen/Network/AWS/WorkLink/Types/WebsiteAuthorizationProviderSummary.hs",
        "gen/Network/AWS/WorkLink/Types/WebsiteCaSummary.hs",
        "gen/Network/AWS/WorkLink/UntagResource.hs",
        "gen/Network/AWS/WorkLink/UpdateAuditStreamConfiguration.hs",
        "gen/Network/AWS/WorkLink/UpdateCompanyNetworkConfiguration.hs",
        "gen/Network/AWS/WorkLink/UpdateDevicePolicyConfiguration.hs",
        "gen/Network/AWS/WorkLink/UpdateDomainMetadata.hs",
        "gen/Network/AWS/WorkLink/UpdateFleetMetadata.hs",
        "gen/Network/AWS/WorkLink/UpdateIdentityProviderConfiguration.hs",
        "gen/Network/AWS/WorkLink/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_worklink=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-worklink/amazonka-worklink.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-worklink-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/WorkLink.hs",
        "test/Test/AWS/WorkLink.hs",
        "test/Test/AWS/WorkLink/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_worklink=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-worklink",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
