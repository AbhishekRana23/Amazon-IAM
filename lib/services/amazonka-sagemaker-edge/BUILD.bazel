load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-sagemaker-edge/amazonka-sagemaker-edge.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-sagemaker-edge",
    srcs = [
        "gen/Amazonka/SageMakerEdge.hs",
        "gen/Amazonka/SageMakerEdge/GetDeviceRegistration.hs",
        "gen/Amazonka/SageMakerEdge/Lens.hs",
        "gen/Amazonka/SageMakerEdge/SendHeartbeat.hs",
        "gen/Amazonka/SageMakerEdge/Types.hs",
        "gen/Amazonka/SageMakerEdge/Types/EdgeMetric.hs",
        "gen/Amazonka/SageMakerEdge/Types/Model.hs",
        "gen/Amazonka/SageMakerEdge/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_sagemaker_edge=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-sagemaker-edge/amazonka-sagemaker-edge.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-sagemaker-edge-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/SageMakerEdge.hs",
        "test/Test/Amazonka/SageMakerEdge.hs",
        "test/Test/Amazonka/SageMakerEdge/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_sagemaker_edge=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-sagemaker-edge",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
