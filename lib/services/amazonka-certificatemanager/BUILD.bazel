load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-certificatemanager/amazonka-certificatemanager.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-certificatemanager",
    srcs = [
        "gen/Network/AWS/CertificateManager.hs",
        "gen/Network/AWS/CertificateManager/AddTagsToCertificate.hs",
        "gen/Network/AWS/CertificateManager/DeleteCertificate.hs",
        "gen/Network/AWS/CertificateManager/DescribeCertificate.hs",
        "gen/Network/AWS/CertificateManager/ExportCertificate.hs",
        "gen/Network/AWS/CertificateManager/GetAccountConfiguration.hs",
        "gen/Network/AWS/CertificateManager/GetCertificate.hs",
        "gen/Network/AWS/CertificateManager/ImportCertificate.hs",
        "gen/Network/AWS/CertificateManager/Lens.hs",
        "gen/Network/AWS/CertificateManager/ListCertificates.hs",
        "gen/Network/AWS/CertificateManager/ListTagsForCertificate.hs",
        "gen/Network/AWS/CertificateManager/PutAccountConfiguration.hs",
        "gen/Network/AWS/CertificateManager/RemoveTagsFromCertificate.hs",
        "gen/Network/AWS/CertificateManager/RenewCertificate.hs",
        "gen/Network/AWS/CertificateManager/RequestCertificate.hs",
        "gen/Network/AWS/CertificateManager/ResendValidationEmail.hs",
        "gen/Network/AWS/CertificateManager/Types.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateDetail.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateOptions.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateStatus.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateSummary.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateTransparencyLoggingPreference.hs",
        "gen/Network/AWS/CertificateManager/Types/CertificateType.hs",
        "gen/Network/AWS/CertificateManager/Types/DomainStatus.hs",
        "gen/Network/AWS/CertificateManager/Types/DomainValidation.hs",
        "gen/Network/AWS/CertificateManager/Types/DomainValidationOption.hs",
        "gen/Network/AWS/CertificateManager/Types/ExpiryEventsConfiguration.hs",
        "gen/Network/AWS/CertificateManager/Types/ExtendedKeyUsage.hs",
        "gen/Network/AWS/CertificateManager/Types/ExtendedKeyUsageName.hs",
        "gen/Network/AWS/CertificateManager/Types/FailureReason.hs",
        "gen/Network/AWS/CertificateManager/Types/Filters.hs",
        "gen/Network/AWS/CertificateManager/Types/KeyAlgorithm.hs",
        "gen/Network/AWS/CertificateManager/Types/KeyUsage.hs",
        "gen/Network/AWS/CertificateManager/Types/KeyUsageName.hs",
        "gen/Network/AWS/CertificateManager/Types/RecordType.hs",
        "gen/Network/AWS/CertificateManager/Types/RenewalEligibility.hs",
        "gen/Network/AWS/CertificateManager/Types/RenewalStatus.hs",
        "gen/Network/AWS/CertificateManager/Types/RenewalSummary.hs",
        "gen/Network/AWS/CertificateManager/Types/ResourceRecord.hs",
        "gen/Network/AWS/CertificateManager/Types/RevocationReason.hs",
        "gen/Network/AWS/CertificateManager/Types/Tag.hs",
        "gen/Network/AWS/CertificateManager/Types/ValidationMethod.hs",
        "gen/Network/AWS/CertificateManager/UpdateCertificateOptions.hs",
        "gen/Network/AWS/CertificateManager/Waiters.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
        "-DVERSION_amazonka_certificatemanager=\"2.0\"",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-certificatemanager/amazonka-certificatemanager.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-certificatemanager-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/CertificateManager.hs",
        "test/Test/AWS/CertificateManager/Internal.hs",
        "test/Test/AWS/Gen/CertificateManager.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-threaded",
        "-DVERSION_amazonka_certificatemanager=\"2.0\"",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-certificatemanager",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
