load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-transfer/amazonka-transfer.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-transfer",
    srcs = [
        "gen/Network/AWS/Transfer.hs",
        "gen/Network/AWS/Transfer/CreateAccess.hs",
        "gen/Network/AWS/Transfer/CreateServer.hs",
        "gen/Network/AWS/Transfer/CreateUser.hs",
        "gen/Network/AWS/Transfer/CreateWorkflow.hs",
        "gen/Network/AWS/Transfer/DeleteAccess.hs",
        "gen/Network/AWS/Transfer/DeleteServer.hs",
        "gen/Network/AWS/Transfer/DeleteSshPublicKey.hs",
        "gen/Network/AWS/Transfer/DeleteUser.hs",
        "gen/Network/AWS/Transfer/DeleteWorkflow.hs",
        "gen/Network/AWS/Transfer/DescribeAccess.hs",
        "gen/Network/AWS/Transfer/DescribeExecution.hs",
        "gen/Network/AWS/Transfer/DescribeSecurityPolicy.hs",
        "gen/Network/AWS/Transfer/DescribeServer.hs",
        "gen/Network/AWS/Transfer/DescribeUser.hs",
        "gen/Network/AWS/Transfer/DescribeWorkflow.hs",
        "gen/Network/AWS/Transfer/ImportSshPublicKey.hs",
        "gen/Network/AWS/Transfer/Lens.hs",
        "gen/Network/AWS/Transfer/ListAccesses.hs",
        "gen/Network/AWS/Transfer/ListExecutions.hs",
        "gen/Network/AWS/Transfer/ListSecurityPolicies.hs",
        "gen/Network/AWS/Transfer/ListServers.hs",
        "gen/Network/AWS/Transfer/ListTagsForResource.hs",
        "gen/Network/AWS/Transfer/ListUsers.hs",
        "gen/Network/AWS/Transfer/ListWorkflows.hs",
        "gen/Network/AWS/Transfer/SendWorkflowStepState.hs",
        "gen/Network/AWS/Transfer/StartServer.hs",
        "gen/Network/AWS/Transfer/StopServer.hs",
        "gen/Network/AWS/Transfer/TagResource.hs",
        "gen/Network/AWS/Transfer/TestIdentityProvider.hs",
        "gen/Network/AWS/Transfer/Types.hs",
        "gen/Network/AWS/Transfer/Types/CopyStepDetails.hs",
        "gen/Network/AWS/Transfer/Types/CustomStepDetails.hs",
        "gen/Network/AWS/Transfer/Types/CustomStepStatus.hs",
        "gen/Network/AWS/Transfer/Types/DeleteStepDetails.hs",
        "gen/Network/AWS/Transfer/Types/DescribedAccess.hs",
        "gen/Network/AWS/Transfer/Types/DescribedExecution.hs",
        "gen/Network/AWS/Transfer/Types/DescribedSecurityPolicy.hs",
        "gen/Network/AWS/Transfer/Types/DescribedServer.hs",
        "gen/Network/AWS/Transfer/Types/DescribedUser.hs",
        "gen/Network/AWS/Transfer/Types/DescribedWorkflow.hs",
        "gen/Network/AWS/Transfer/Types/Domain.hs",
        "gen/Network/AWS/Transfer/Types/EfsFileLocation.hs",
        "gen/Network/AWS/Transfer/Types/EndpointDetails.hs",
        "gen/Network/AWS/Transfer/Types/EndpointType.hs",
        "gen/Network/AWS/Transfer/Types/ExecutionError.hs",
        "gen/Network/AWS/Transfer/Types/ExecutionErrorType.hs",
        "gen/Network/AWS/Transfer/Types/ExecutionResults.hs",
        "gen/Network/AWS/Transfer/Types/ExecutionStatus.hs",
        "gen/Network/AWS/Transfer/Types/ExecutionStepResult.hs",
        "gen/Network/AWS/Transfer/Types/FileLocation.hs",
        "gen/Network/AWS/Transfer/Types/HomeDirectoryMapEntry.hs",
        "gen/Network/AWS/Transfer/Types/HomeDirectoryType.hs",
        "gen/Network/AWS/Transfer/Types/IdentityProviderDetails.hs",
        "gen/Network/AWS/Transfer/Types/IdentityProviderType.hs",
        "gen/Network/AWS/Transfer/Types/InputFileLocation.hs",
        "gen/Network/AWS/Transfer/Types/ListedAccess.hs",
        "gen/Network/AWS/Transfer/Types/ListedExecution.hs",
        "gen/Network/AWS/Transfer/Types/ListedServer.hs",
        "gen/Network/AWS/Transfer/Types/ListedUser.hs",
        "gen/Network/AWS/Transfer/Types/ListedWorkflow.hs",
        "gen/Network/AWS/Transfer/Types/LoggingConfiguration.hs",
        "gen/Network/AWS/Transfer/Types/OverwriteExisting.hs",
        "gen/Network/AWS/Transfer/Types/PosixProfile.hs",
        "gen/Network/AWS/Transfer/Types/Protocol.hs",
        "gen/Network/AWS/Transfer/Types/ProtocolDetails.hs",
        "gen/Network/AWS/Transfer/Types/S3FileLocation.hs",
        "gen/Network/AWS/Transfer/Types/S3InputFileLocation.hs",
        "gen/Network/AWS/Transfer/Types/S3Tag.hs",
        "gen/Network/AWS/Transfer/Types/ServiceMetadata.hs",
        "gen/Network/AWS/Transfer/Types/SshPublicKey.hs",
        "gen/Network/AWS/Transfer/Types/State.hs",
        "gen/Network/AWS/Transfer/Types/Tag.hs",
        "gen/Network/AWS/Transfer/Types/TagStepDetails.hs",
        "gen/Network/AWS/Transfer/Types/UserDetails.hs",
        "gen/Network/AWS/Transfer/Types/WorkflowDetail.hs",
        "gen/Network/AWS/Transfer/Types/WorkflowDetails.hs",
        "gen/Network/AWS/Transfer/Types/WorkflowStep.hs",
        "gen/Network/AWS/Transfer/Types/WorkflowStepType.hs",
        "gen/Network/AWS/Transfer/UntagResource.hs",
        "gen/Network/AWS/Transfer/UpdateAccess.hs",
        "gen/Network/AWS/Transfer/UpdateServer.hs",
        "gen/Network/AWS/Transfer/UpdateUser.hs",
        "gen/Network/AWS/Transfer/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_transfer=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-transfer/amazonka-transfer.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-transfer-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/Transfer.hs",
        "test/Test/AWS/Transfer.hs",
        "test/Test/AWS/Transfer/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_transfer=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-transfer",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
