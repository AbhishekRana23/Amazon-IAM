cabal-version:      2.2
name:               amazonka-fis
version:            2.0
synopsis:           Amazon Fault Injection Simulator SDK.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:          Copyright (c) 2013-2021 Brendan Hay
category:           AWS
build-type:         Simple
extra-source-files:
  fixture/*.proto
  fixture/*.yaml
  README.md
  src/.gitkeep

description:
  Derived from API version @2020-12-01@ of the AWS service descriptions, licensed under Apache 2.0.
  .
  The types from this library are intended to be used with <http://hackage.haskell.org/package/amazonka amazonka>,
  which provides mechanisms for specifying AuthN/AuthZ information, sending requests, and receiving responses.
  .
  It is recommended to use generic lenses or optics from packages such as <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify optional fields and deconstruct responses.
  .
  Generated lenses for legacy behaviour can be found in "Network.AWS.FIS.Lens"
  and are suitable for use with a lens package such as <http://hackage.haskell.org/package/lens lens> or <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
  .
  Additional types and functions from <https://hackage.haskell.org/package/amazonka-core amazonka-core> are re-exported by the "Network.AWS.Prelude" module in this package.
  .
  See "Network.AWS.FIS" and the <https://aws.amazon.com/documentation/ AWS documentation> to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git
  subdir:   amazonka-fis

library
  default-language:   Haskell2010
  hs-source-dirs:     src gen
  ghc-options:
    -Wall -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates -funbox-strict-fields

  exposed-modules:
    Network.AWS.FIS
    Network.AWS.FIS.CreateExperimentTemplate
    Network.AWS.FIS.DeleteExperimentTemplate
    Network.AWS.FIS.GetAction
    Network.AWS.FIS.GetExperiment
    Network.AWS.FIS.GetExperimentTemplate
    Network.AWS.FIS.Lens
    Network.AWS.FIS.ListActions
    Network.AWS.FIS.ListExperiments
    Network.AWS.FIS.ListExperimentTemplates
    Network.AWS.FIS.ListTagsForResource
    Network.AWS.FIS.StartExperiment
    Network.AWS.FIS.StopExperiment
    Network.AWS.FIS.TagResource
    Network.AWS.FIS.Types
    Network.AWS.FIS.Types.Action
    Network.AWS.FIS.Types.ActionParameter
    Network.AWS.FIS.Types.ActionSummary
    Network.AWS.FIS.Types.ActionTarget
    Network.AWS.FIS.Types.CreateExperimentTemplateActionInput
    Network.AWS.FIS.Types.CreateExperimentTemplateStopConditionInput
    Network.AWS.FIS.Types.CreateExperimentTemplateTargetInput
    Network.AWS.FIS.Types.Experiment
    Network.AWS.FIS.Types.ExperimentAction
    Network.AWS.FIS.Types.ExperimentActionState
    Network.AWS.FIS.Types.ExperimentActionStatus
    Network.AWS.FIS.Types.ExperimentState
    Network.AWS.FIS.Types.ExperimentStatus
    Network.AWS.FIS.Types.ExperimentStopCondition
    Network.AWS.FIS.Types.ExperimentSummary
    Network.AWS.FIS.Types.ExperimentTarget
    Network.AWS.FIS.Types.ExperimentTargetFilter
    Network.AWS.FIS.Types.ExperimentTemplate
    Network.AWS.FIS.Types.ExperimentTemplateAction
    Network.AWS.FIS.Types.ExperimentTemplateStopCondition
    Network.AWS.FIS.Types.ExperimentTemplateSummary
    Network.AWS.FIS.Types.ExperimentTemplateTarget
    Network.AWS.FIS.Types.ExperimentTemplateTargetFilter
    Network.AWS.FIS.Types.ExperimentTemplateTargetInputFilter
    Network.AWS.FIS.Types.UpdateExperimentTemplateActionInputItem
    Network.AWS.FIS.Types.UpdateExperimentTemplateStopConditionInput
    Network.AWS.FIS.Types.UpdateExperimentTemplateTargetInput
    Network.AWS.FIS.UntagResource
    Network.AWS.FIS.UpdateExperimentTemplate
    Network.AWS.FIS.Waiters

  reexported-modules: Network.AWS
  build-depends:
    , amazonka  ^>=2.0
    , base      >=4.12 && <5

test-suite amazonka-fis-test
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Main.hs
  ghc-options:      -Wall -threaded

  -- This section is encoded by the template and any modules added by
  -- hand outside these namespaces will not correctly be added to the
  -- distribution package.
  other-modules:
    Test.AWS.FIS
    Test.AWS.FIS.Internal
    Test.AWS.Gen.FIS

  build-depends:
    , amazonka              ^>=2.0
    , amazonka-fis
    , amazonka-test         ^>=2.0
    , base
    , bytestring
    , case-insensitive
    , tasty
    , tasty-hunit
    , text
    , time
    , unordered-containers
