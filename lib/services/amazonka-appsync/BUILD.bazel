load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-appsync/amazonka-appsync.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-appsync",
    srcs = [
        "gen/Network/AWS/AppSync.hs",
        "gen/Network/AWS/AppSync/CreateApiCache.hs",
        "gen/Network/AWS/AppSync/CreateApiKey.hs",
        "gen/Network/AWS/AppSync/CreateDataSource.hs",
        "gen/Network/AWS/AppSync/CreateFunction.hs",
        "gen/Network/AWS/AppSync/CreateGraphqlApi.hs",
        "gen/Network/AWS/AppSync/CreateResolver.hs",
        "gen/Network/AWS/AppSync/CreateType.hs",
        "gen/Network/AWS/AppSync/DeleteApiCache.hs",
        "gen/Network/AWS/AppSync/DeleteApiKey.hs",
        "gen/Network/AWS/AppSync/DeleteDataSource.hs",
        "gen/Network/AWS/AppSync/DeleteFunction.hs",
        "gen/Network/AWS/AppSync/DeleteGraphqlApi.hs",
        "gen/Network/AWS/AppSync/DeleteResolver.hs",
        "gen/Network/AWS/AppSync/DeleteType.hs",
        "gen/Network/AWS/AppSync/FlushApiCache.hs",
        "gen/Network/AWS/AppSync/GetApiCache.hs",
        "gen/Network/AWS/AppSync/GetDataSource.hs",
        "gen/Network/AWS/AppSync/GetFunction.hs",
        "gen/Network/AWS/AppSync/GetGraphqlApi.hs",
        "gen/Network/AWS/AppSync/GetIntrospectionSchema.hs",
        "gen/Network/AWS/AppSync/GetResolver.hs",
        "gen/Network/AWS/AppSync/GetSchemaCreationStatus.hs",
        "gen/Network/AWS/AppSync/GetType.hs",
        "gen/Network/AWS/AppSync/Lens.hs",
        "gen/Network/AWS/AppSync/ListApiKeys.hs",
        "gen/Network/AWS/AppSync/ListDataSources.hs",
        "gen/Network/AWS/AppSync/ListFunctions.hs",
        "gen/Network/AWS/AppSync/ListGraphqlApis.hs",
        "gen/Network/AWS/AppSync/ListResolvers.hs",
        "gen/Network/AWS/AppSync/ListResolversByFunction.hs",
        "gen/Network/AWS/AppSync/ListTagsForResource.hs",
        "gen/Network/AWS/AppSync/ListTypes.hs",
        "gen/Network/AWS/AppSync/StartSchemaCreation.hs",
        "gen/Network/AWS/AppSync/TagResource.hs",
        "gen/Network/AWS/AppSync/Types.hs",
        "gen/Network/AWS/AppSync/Types/AdditionalAuthenticationProvider.hs",
        "gen/Network/AWS/AppSync/Types/ApiCache.hs",
        "gen/Network/AWS/AppSync/Types/ApiCacheStatus.hs",
        "gen/Network/AWS/AppSync/Types/ApiCacheType.hs",
        "gen/Network/AWS/AppSync/Types/ApiCachingBehavior.hs",
        "gen/Network/AWS/AppSync/Types/ApiKey.hs",
        "gen/Network/AWS/AppSync/Types/AuthenticationType.hs",
        "gen/Network/AWS/AppSync/Types/AuthorizationConfig.hs",
        "gen/Network/AWS/AppSync/Types/AuthorizationType.hs",
        "gen/Network/AWS/AppSync/Types/AwsIamConfig.hs",
        "gen/Network/AWS/AppSync/Types/CachingConfig.hs",
        "gen/Network/AWS/AppSync/Types/CognitoUserPoolConfig.hs",
        "gen/Network/AWS/AppSync/Types/ConflictDetectionType.hs",
        "gen/Network/AWS/AppSync/Types/ConflictHandlerType.hs",
        "gen/Network/AWS/AppSync/Types/DataSource.hs",
        "gen/Network/AWS/AppSync/Types/DataSourceType.hs",
        "gen/Network/AWS/AppSync/Types/DefaultAction.hs",
        "gen/Network/AWS/AppSync/Types/DeltaSyncConfig.hs",
        "gen/Network/AWS/AppSync/Types/DynamodbDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/ElasticsearchDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/FieldLogLevel.hs",
        "gen/Network/AWS/AppSync/Types/FunctionConfiguration.hs",
        "gen/Network/AWS/AppSync/Types/GraphqlApi.hs",
        "gen/Network/AWS/AppSync/Types/HttpDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/LambdaAuthorizerConfig.hs",
        "gen/Network/AWS/AppSync/Types/LambdaConflictHandlerConfig.hs",
        "gen/Network/AWS/AppSync/Types/LambdaDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/LogConfig.hs",
        "gen/Network/AWS/AppSync/Types/OpenIDConnectConfig.hs",
        "gen/Network/AWS/AppSync/Types/OpenSearchServiceDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/OutputType.hs",
        "gen/Network/AWS/AppSync/Types/PipelineConfig.hs",
        "gen/Network/AWS/AppSync/Types/RdsHttpEndpointConfig.hs",
        "gen/Network/AWS/AppSync/Types/RelationalDatabaseDataSourceConfig.hs",
        "gen/Network/AWS/AppSync/Types/RelationalDatabaseSourceType.hs",
        "gen/Network/AWS/AppSync/Types/Resolver.hs",
        "gen/Network/AWS/AppSync/Types/ResolverKind.hs",
        "gen/Network/AWS/AppSync/Types/SchemaStatus.hs",
        "gen/Network/AWS/AppSync/Types/SyncConfig.hs",
        "gen/Network/AWS/AppSync/Types/Type.hs",
        "gen/Network/AWS/AppSync/Types/TypeDefinitionFormat.hs",
        "gen/Network/AWS/AppSync/Types/UserPoolConfig.hs",
        "gen/Network/AWS/AppSync/UntagResource.hs",
        "gen/Network/AWS/AppSync/UpdateApiCache.hs",
        "gen/Network/AWS/AppSync/UpdateApiKey.hs",
        "gen/Network/AWS/AppSync/UpdateDataSource.hs",
        "gen/Network/AWS/AppSync/UpdateFunction.hs",
        "gen/Network/AWS/AppSync/UpdateGraphqlApi.hs",
        "gen/Network/AWS/AppSync/UpdateResolver.hs",
        "gen/Network/AWS/AppSync/UpdateType.hs",
        "gen/Network/AWS/AppSync/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_appsync=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-appsync/amazonka-appsync.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-appsync-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/AppSync.hs",
        "test/Test/AWS/AppSync/Internal.hs",
        "test/Test/AWS/Gen/AppSync.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_appsync=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-appsync",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
