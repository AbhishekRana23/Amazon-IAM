load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ivs/amazonka-ivs.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ivs",
    srcs = [
        "gen/Network/AWS/IVS.hs",
        "gen/Network/AWS/IVS/BatchGetChannel.hs",
        "gen/Network/AWS/IVS/BatchGetStreamKey.hs",
        "gen/Network/AWS/IVS/CreateChannel.hs",
        "gen/Network/AWS/IVS/CreateRecordingConfiguration.hs",
        "gen/Network/AWS/IVS/CreateStreamKey.hs",
        "gen/Network/AWS/IVS/DeleteChannel.hs",
        "gen/Network/AWS/IVS/DeletePlaybackKeyPair.hs",
        "gen/Network/AWS/IVS/DeleteRecordingConfiguration.hs",
        "gen/Network/AWS/IVS/DeleteStreamKey.hs",
        "gen/Network/AWS/IVS/GetChannel.hs",
        "gen/Network/AWS/IVS/GetPlaybackKeyPair.hs",
        "gen/Network/AWS/IVS/GetRecordingConfiguration.hs",
        "gen/Network/AWS/IVS/GetStream.hs",
        "gen/Network/AWS/IVS/GetStreamKey.hs",
        "gen/Network/AWS/IVS/ImportPlaybackKeyPair.hs",
        "gen/Network/AWS/IVS/Lens.hs",
        "gen/Network/AWS/IVS/ListChannels.hs",
        "gen/Network/AWS/IVS/ListPlaybackKeyPairs.hs",
        "gen/Network/AWS/IVS/ListRecordingConfigurations.hs",
        "gen/Network/AWS/IVS/ListStreamKeys.hs",
        "gen/Network/AWS/IVS/ListStreams.hs",
        "gen/Network/AWS/IVS/ListTagsForResource.hs",
        "gen/Network/AWS/IVS/PutMetadata.hs",
        "gen/Network/AWS/IVS/StopStream.hs",
        "gen/Network/AWS/IVS/TagResource.hs",
        "gen/Network/AWS/IVS/Types.hs",
        "gen/Network/AWS/IVS/Types/BatchError.hs",
        "gen/Network/AWS/IVS/Types/Channel.hs",
        "gen/Network/AWS/IVS/Types/ChannelLatencyMode.hs",
        "gen/Network/AWS/IVS/Types/ChannelSummary.hs",
        "gen/Network/AWS/IVS/Types/ChannelType.hs",
        "gen/Network/AWS/IVS/Types/DestinationConfiguration.hs",
        "gen/Network/AWS/IVS/Types/PlaybackKeyPair.hs",
        "gen/Network/AWS/IVS/Types/PlaybackKeyPairSummary.hs",
        "gen/Network/AWS/IVS/Types/RecordingConfiguration.hs",
        "gen/Network/AWS/IVS/Types/RecordingConfigurationState.hs",
        "gen/Network/AWS/IVS/Types/RecordingConfigurationSummary.hs",
        "gen/Network/AWS/IVS/Types/S3DestinationConfiguration.hs",
        "gen/Network/AWS/IVS/Types/Stream.hs",
        "gen/Network/AWS/IVS/Types/StreamHealth.hs",
        "gen/Network/AWS/IVS/Types/StreamKey.hs",
        "gen/Network/AWS/IVS/Types/StreamKeySummary.hs",
        "gen/Network/AWS/IVS/Types/StreamState.hs",
        "gen/Network/AWS/IVS/Types/StreamSummary.hs",
        "gen/Network/AWS/IVS/UntagResource.hs",
        "gen/Network/AWS/IVS/UpdateChannel.hs",
        "gen/Network/AWS/IVS/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_ivs=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ivs/amazonka-ivs.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ivs-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/IVS.hs",
        "test/Test/AWS/IVS.hs",
        "test/Test/AWS/IVS/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_ivs=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ivs",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
