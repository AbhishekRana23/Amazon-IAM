load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-panorama/amazonka-panorama.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-panorama",
    srcs = [
        "gen/Network/AWS/Panorama.hs",
        "gen/Network/AWS/Panorama/CreateApplicationInstance.hs",
        "gen/Network/AWS/Panorama/CreateJobForDevices.hs",
        "gen/Network/AWS/Panorama/CreateNodeFromTemplateJob.hs",
        "gen/Network/AWS/Panorama/CreatePackage.hs",
        "gen/Network/AWS/Panorama/CreatePackageImportJob.hs",
        "gen/Network/AWS/Panorama/DeleteDevice.hs",
        "gen/Network/AWS/Panorama/DeletePackage.hs",
        "gen/Network/AWS/Panorama/DeregisterPackageVersion.hs",
        "gen/Network/AWS/Panorama/DescribeApplicationInstance.hs",
        "gen/Network/AWS/Panorama/DescribeApplicationInstanceDetails.hs",
        "gen/Network/AWS/Panorama/DescribeDevice.hs",
        "gen/Network/AWS/Panorama/DescribeDeviceJob.hs",
        "gen/Network/AWS/Panorama/DescribeNode.hs",
        "gen/Network/AWS/Panorama/DescribeNodeFromTemplateJob.hs",
        "gen/Network/AWS/Panorama/DescribePackage.hs",
        "gen/Network/AWS/Panorama/DescribePackageImportJob.hs",
        "gen/Network/AWS/Panorama/DescribePackageVersion.hs",
        "gen/Network/AWS/Panorama/Lens.hs",
        "gen/Network/AWS/Panorama/ListApplicationInstanceDependencies.hs",
        "gen/Network/AWS/Panorama/ListApplicationInstanceNodeInstances.hs",
        "gen/Network/AWS/Panorama/ListApplicationInstances.hs",
        "gen/Network/AWS/Panorama/ListDevices.hs",
        "gen/Network/AWS/Panorama/ListDevicesJobs.hs",
        "gen/Network/AWS/Panorama/ListNodeFromTemplateJobs.hs",
        "gen/Network/AWS/Panorama/ListNodes.hs",
        "gen/Network/AWS/Panorama/ListPackageImportJobs.hs",
        "gen/Network/AWS/Panorama/ListPackages.hs",
        "gen/Network/AWS/Panorama/ListTagsForResource.hs",
        "gen/Network/AWS/Panorama/ProvisionDevice.hs",
        "gen/Network/AWS/Panorama/RegisterPackageVersion.hs",
        "gen/Network/AWS/Panorama/RemoveApplicationInstance.hs",
        "gen/Network/AWS/Panorama/TagResource.hs",
        "gen/Network/AWS/Panorama/Types.hs",
        "gen/Network/AWS/Panorama/Types/ApplicationInstance.hs",
        "gen/Network/AWS/Panorama/Types/ApplicationInstanceHealthStatus.hs",
        "gen/Network/AWS/Panorama/Types/ApplicationInstanceStatus.hs",
        "gen/Network/AWS/Panorama/Types/ConnectionType.hs",
        "gen/Network/AWS/Panorama/Types/Device.hs",
        "gen/Network/AWS/Panorama/Types/DeviceConnectionStatus.hs",
        "gen/Network/AWS/Panorama/Types/DeviceJob.hs",
        "gen/Network/AWS/Panorama/Types/DeviceJobConfig.hs",
        "gen/Network/AWS/Panorama/Types/DeviceStatus.hs",
        "gen/Network/AWS/Panorama/Types/DeviceType.hs",
        "gen/Network/AWS/Panorama/Types/EthernetPayload.hs",
        "gen/Network/AWS/Panorama/Types/EthernetStatus.hs",
        "gen/Network/AWS/Panorama/Types/Job.hs",
        "gen/Network/AWS/Panorama/Types/JobResourceTags.hs",
        "gen/Network/AWS/Panorama/Types/JobResourceType.hs",
        "gen/Network/AWS/Panorama/Types/JobType.hs",
        "gen/Network/AWS/Panorama/Types/ManifestOverridesPayload.hs",
        "gen/Network/AWS/Panorama/Types/ManifestPayload.hs",
        "gen/Network/AWS/Panorama/Types/NetworkConnectionStatus.hs",
        "gen/Network/AWS/Panorama/Types/NetworkPayload.hs",
        "gen/Network/AWS/Panorama/Types/NetworkStatus.hs",
        "gen/Network/AWS/Panorama/Types/Node.hs",
        "gen/Network/AWS/Panorama/Types/NodeCategory.hs",
        "gen/Network/AWS/Panorama/Types/NodeFromTemplateJob.hs",
        "gen/Network/AWS/Panorama/Types/NodeFromTemplateJobStatus.hs",
        "gen/Network/AWS/Panorama/Types/NodeInputPort.hs",
        "gen/Network/AWS/Panorama/Types/NodeInstance.hs",
        "gen/Network/AWS/Panorama/Types/NodeInstanceStatus.hs",
        "gen/Network/AWS/Panorama/Types/NodeInterface.hs",
        "gen/Network/AWS/Panorama/Types/NodeOutputPort.hs",
        "gen/Network/AWS/Panorama/Types/OTAJobConfig.hs",
        "gen/Network/AWS/Panorama/Types/OutPutS3Location.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJob.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJobInputConfig.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJobOutput.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJobOutputConfig.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJobStatus.hs",
        "gen/Network/AWS/Panorama/Types/PackageImportJobType.hs",
        "gen/Network/AWS/Panorama/Types/PackageListItem.hs",
        "gen/Network/AWS/Panorama/Types/PackageObject.hs",
        "gen/Network/AWS/Panorama/Types/PackageVersionInputConfig.hs",
        "gen/Network/AWS/Panorama/Types/PackageVersionOutputConfig.hs",
        "gen/Network/AWS/Panorama/Types/PackageVersionStatus.hs",
        "gen/Network/AWS/Panorama/Types/PortType.hs",
        "gen/Network/AWS/Panorama/Types/S3Location.hs",
        "gen/Network/AWS/Panorama/Types/StaticIpConnectionInfo.hs",
        "gen/Network/AWS/Panorama/Types/StatusFilter.hs",
        "gen/Network/AWS/Panorama/Types/StorageLocation.hs",
        "gen/Network/AWS/Panorama/Types/TemplateType.hs",
        "gen/Network/AWS/Panorama/Types/UpdateProgress.hs",
        "gen/Network/AWS/Panorama/UntagResource.hs",
        "gen/Network/AWS/Panorama/UpdateDeviceMetadata.hs",
        "gen/Network/AWS/Panorama/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_panorama=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-panorama/amazonka-panorama.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-panorama-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/Panorama.hs",
        "test/Test/AWS/Panorama.hs",
        "test/Test/AWS/Panorama/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_panorama=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-panorama",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
