load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-forecast/amazonka-forecast.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-forecast",
    srcs = [
        "gen/Network/AWS/Forecast.hs",
        "gen/Network/AWS/Forecast/CreateDataset.hs",
        "gen/Network/AWS/Forecast/CreateDatasetGroup.hs",
        "gen/Network/AWS/Forecast/CreateDatasetImportJob.hs",
        "gen/Network/AWS/Forecast/CreateForecast.hs",
        "gen/Network/AWS/Forecast/CreateForecastExportJob.hs",
        "gen/Network/AWS/Forecast/CreatePredictor.hs",
        "gen/Network/AWS/Forecast/CreatePredictorBacktestExportJob.hs",
        "gen/Network/AWS/Forecast/DeleteDataset.hs",
        "gen/Network/AWS/Forecast/DeleteDatasetGroup.hs",
        "gen/Network/AWS/Forecast/DeleteDatasetImportJob.hs",
        "gen/Network/AWS/Forecast/DeleteForecast.hs",
        "gen/Network/AWS/Forecast/DeleteForecastExportJob.hs",
        "gen/Network/AWS/Forecast/DeletePredictor.hs",
        "gen/Network/AWS/Forecast/DeletePredictorBacktestExportJob.hs",
        "gen/Network/AWS/Forecast/DeleteResourceTree.hs",
        "gen/Network/AWS/Forecast/DescribeDataset.hs",
        "gen/Network/AWS/Forecast/DescribeDatasetGroup.hs",
        "gen/Network/AWS/Forecast/DescribeDatasetImportJob.hs",
        "gen/Network/AWS/Forecast/DescribeForecast.hs",
        "gen/Network/AWS/Forecast/DescribeForecastExportJob.hs",
        "gen/Network/AWS/Forecast/DescribePredictor.hs",
        "gen/Network/AWS/Forecast/DescribePredictorBacktestExportJob.hs",
        "gen/Network/AWS/Forecast/GetAccuracyMetrics.hs",
        "gen/Network/AWS/Forecast/Lens.hs",
        "gen/Network/AWS/Forecast/ListDatasetGroups.hs",
        "gen/Network/AWS/Forecast/ListDatasetImportJobs.hs",
        "gen/Network/AWS/Forecast/ListDatasets.hs",
        "gen/Network/AWS/Forecast/ListForecastExportJobs.hs",
        "gen/Network/AWS/Forecast/ListForecasts.hs",
        "gen/Network/AWS/Forecast/ListPredictorBacktestExportJobs.hs",
        "gen/Network/AWS/Forecast/ListPredictors.hs",
        "gen/Network/AWS/Forecast/ListTagsForResource.hs",
        "gen/Network/AWS/Forecast/StopResource.hs",
        "gen/Network/AWS/Forecast/TagResource.hs",
        "gen/Network/AWS/Forecast/Types.hs",
        "gen/Network/AWS/Forecast/Types/AttributeType.hs",
        "gen/Network/AWS/Forecast/Types/AutoMLOverrideStrategy.hs",
        "gen/Network/AWS/Forecast/Types/CategoricalParameterRange.hs",
        "gen/Network/AWS/Forecast/Types/ContinuousParameterRange.hs",
        "gen/Network/AWS/Forecast/Types/DataDestination.hs",
        "gen/Network/AWS/Forecast/Types/DataSource.hs",
        "gen/Network/AWS/Forecast/Types/DatasetGroupSummary.hs",
        "gen/Network/AWS/Forecast/Types/DatasetImportJobSummary.hs",
        "gen/Network/AWS/Forecast/Types/DatasetSummary.hs",
        "gen/Network/AWS/Forecast/Types/DatasetType.hs",
        "gen/Network/AWS/Forecast/Types/Domain.hs",
        "gen/Network/AWS/Forecast/Types/EncryptionConfig.hs",
        "gen/Network/AWS/Forecast/Types/ErrorMetric.hs",
        "gen/Network/AWS/Forecast/Types/EvaluationParameters.hs",
        "gen/Network/AWS/Forecast/Types/EvaluationResult.hs",
        "gen/Network/AWS/Forecast/Types/EvaluationType.hs",
        "gen/Network/AWS/Forecast/Types/Featurization.hs",
        "gen/Network/AWS/Forecast/Types/FeaturizationConfig.hs",
        "gen/Network/AWS/Forecast/Types/FeaturizationMethod.hs",
        "gen/Network/AWS/Forecast/Types/FeaturizationMethodName.hs",
        "gen/Network/AWS/Forecast/Types/Filter.hs",
        "gen/Network/AWS/Forecast/Types/FilterConditionString.hs",
        "gen/Network/AWS/Forecast/Types/ForecastExportJobSummary.hs",
        "gen/Network/AWS/Forecast/Types/ForecastSummary.hs",
        "gen/Network/AWS/Forecast/Types/HyperParameterTuningJobConfig.hs",
        "gen/Network/AWS/Forecast/Types/InputDataConfig.hs",
        "gen/Network/AWS/Forecast/Types/IntegerParameterRange.hs",
        "gen/Network/AWS/Forecast/Types/Metrics.hs",
        "gen/Network/AWS/Forecast/Types/OptimizationMetric.hs",
        "gen/Network/AWS/Forecast/Types/ParameterRanges.hs",
        "gen/Network/AWS/Forecast/Types/PredictorBacktestExportJobSummary.hs",
        "gen/Network/AWS/Forecast/Types/PredictorExecution.hs",
        "gen/Network/AWS/Forecast/Types/PredictorExecutionDetails.hs",
        "gen/Network/AWS/Forecast/Types/PredictorSummary.hs",
        "gen/Network/AWS/Forecast/Types/S3Config.hs",
        "gen/Network/AWS/Forecast/Types/ScalingType.hs",
        "gen/Network/AWS/Forecast/Types/Schema.hs",
        "gen/Network/AWS/Forecast/Types/SchemaAttribute.hs",
        "gen/Network/AWS/Forecast/Types/Statistics.hs",
        "gen/Network/AWS/Forecast/Types/SupplementaryFeature.hs",
        "gen/Network/AWS/Forecast/Types/Tag.hs",
        "gen/Network/AWS/Forecast/Types/TestWindowSummary.hs",
        "gen/Network/AWS/Forecast/Types/WeightedQuantileLoss.hs",
        "gen/Network/AWS/Forecast/Types/WindowSummary.hs",
        "gen/Network/AWS/Forecast/UntagResource.hs",
        "gen/Network/AWS/Forecast/UpdateDatasetGroup.hs",
        "gen/Network/AWS/Forecast/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_forecast=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-forecast/amazonka-forecast.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-forecast-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Forecast.hs",
        "test/Test/AWS/Forecast/Internal.hs",
        "test/Test/AWS/Gen/Forecast.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_forecast=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-forecast",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
