cabal-version:      2.2
name:               amazonka-networkmanager
version:            2.0
synopsis:           Amazon Network Manager SDK.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:          Copyright (c) 2013-2021 Brendan Hay
category:           AWS
build-type:         Simple
extra-source-files:
  fixture/*.proto
  fixture/*.yaml
  README.md
  src/.gitkeep

description:
  Derived from API version @2019-07-05@ of the AWS service descriptions, licensed under Apache 2.0.
  .
  The types from this library are intended to be used with <http://hackage.haskell.org/package/amazonka amazonka>,
  which provides mechanisms for specifying AuthN/AuthZ information, sending requests, and receiving responses.
  .
  It is recommended to use generic lenses or optics from packages such as <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify optional fields and deconstruct responses.
  .
  Generated lenses for legacy behaviour can be found in "Amazonka.NetworkManager.Lens"
  and are suitable for use with a lens package such as <http://hackage.haskell.org/package/lens lens> or <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
  .
  Additional types and functions from <https://hackage.haskell.org/package/amazonka-core amazonka-core> are re-exported by the "Amazonka.Prelude" module in this package.
  .
  See "Amazonka.NetworkManager" and the <https://aws.amazon.com/documentation/ AWS documentation> to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git
  subdir:   amazonka-networkmanager

library
  default-language:   Haskell2010
  hs-source-dirs:     src gen
  ghc-options:
    -Wall -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates -funbox-strict-fields

  exposed-modules:
    Amazonka.NetworkManager
    Amazonka.NetworkManager.AssociateCustomerGateway
    Amazonka.NetworkManager.AssociateLink
    Amazonka.NetworkManager.AssociateTransitGatewayConnectPeer
    Amazonka.NetworkManager.CreateConnection
    Amazonka.NetworkManager.CreateDevice
    Amazonka.NetworkManager.CreateGlobalNetwork
    Amazonka.NetworkManager.CreateLink
    Amazonka.NetworkManager.CreateSite
    Amazonka.NetworkManager.DeleteConnection
    Amazonka.NetworkManager.DeleteDevice
    Amazonka.NetworkManager.DeleteGlobalNetwork
    Amazonka.NetworkManager.DeleteLink
    Amazonka.NetworkManager.DeleteSite
    Amazonka.NetworkManager.DeregisterTransitGateway
    Amazonka.NetworkManager.DescribeGlobalNetworks
    Amazonka.NetworkManager.DisassociateCustomerGateway
    Amazonka.NetworkManager.DisassociateLink
    Amazonka.NetworkManager.DisassociateTransitGatewayConnectPeer
    Amazonka.NetworkManager.GetConnections
    Amazonka.NetworkManager.GetCustomerGatewayAssociations
    Amazonka.NetworkManager.GetDevices
    Amazonka.NetworkManager.GetLinkAssociations
    Amazonka.NetworkManager.GetLinks
    Amazonka.NetworkManager.GetSites
    Amazonka.NetworkManager.GetTransitGatewayConnectPeerAssociations
    Amazonka.NetworkManager.GetTransitGatewayRegistrations
    Amazonka.NetworkManager.Lens
    Amazonka.NetworkManager.ListTagsForResource
    Amazonka.NetworkManager.RegisterTransitGateway
    Amazonka.NetworkManager.TagResource
    Amazonka.NetworkManager.Types
    Amazonka.NetworkManager.Types.AWSLocation
    Amazonka.NetworkManager.Types.Bandwidth
    Amazonka.NetworkManager.Types.Connection
    Amazonka.NetworkManager.Types.ConnectionState
    Amazonka.NetworkManager.Types.CustomerGatewayAssociation
    Amazonka.NetworkManager.Types.CustomerGatewayAssociationState
    Amazonka.NetworkManager.Types.Device
    Amazonka.NetworkManager.Types.DeviceState
    Amazonka.NetworkManager.Types.GlobalNetwork
    Amazonka.NetworkManager.Types.GlobalNetworkState
    Amazonka.NetworkManager.Types.Link
    Amazonka.NetworkManager.Types.LinkAssociation
    Amazonka.NetworkManager.Types.LinkAssociationState
    Amazonka.NetworkManager.Types.LinkState
    Amazonka.NetworkManager.Types.Location
    Amazonka.NetworkManager.Types.Site
    Amazonka.NetworkManager.Types.SiteState
    Amazonka.NetworkManager.Types.Tag
    Amazonka.NetworkManager.Types.TransitGatewayConnectPeerAssociation
    Amazonka.NetworkManager.Types.TransitGatewayConnectPeerAssociationState
    Amazonka.NetworkManager.Types.TransitGatewayRegistration
    Amazonka.NetworkManager.Types.TransitGatewayRegistrationState
    Amazonka.NetworkManager.Types.TransitGatewayRegistrationStateReason
    Amazonka.NetworkManager.UntagResource
    Amazonka.NetworkManager.UpdateConnection
    Amazonka.NetworkManager.UpdateDevice
    Amazonka.NetworkManager.UpdateGlobalNetwork
    Amazonka.NetworkManager.UpdateLink
    Amazonka.NetworkManager.UpdateSite
    Amazonka.NetworkManager.Waiters

  reexported-modules: Amazonka
  build-depends:
    , amazonka  ^>=2.0
    , base      >=4.12 && <5

test-suite amazonka-networkmanager-test
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Main.hs
  ghc-options:      -Wall -threaded

  -- This section is encoded by the template and any modules added by
  -- hand outside these namespaces will not correctly be added to the
  -- distribution package.
  other-modules:
    Test.AWS.Gen.NetworkManager
    Test.AWS.NetworkManager
    Test.AWS.NetworkManager.Internal

  build-depends:
    , amazonka                 ^>=2.0
    , amazonka-networkmanager
    , amazonka-test            ^>=2.0
    , base
    , bytestring
    , case-insensitive
    , tasty
    , tasty-hunit
    , text
    , time
    , unordered-containers
