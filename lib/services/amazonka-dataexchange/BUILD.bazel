load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-dataexchange/amazonka-dataexchange.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-dataexchange",
    srcs = [
        "gen/Network/AWS/DataExchange.hs",
        "gen/Network/AWS/DataExchange/CancelJob.hs",
        "gen/Network/AWS/DataExchange/CreateDataSet.hs",
        "gen/Network/AWS/DataExchange/CreateEventAction.hs",
        "gen/Network/AWS/DataExchange/CreateJob.hs",
        "gen/Network/AWS/DataExchange/CreateRevision.hs",
        "gen/Network/AWS/DataExchange/DeleteAsset.hs",
        "gen/Network/AWS/DataExchange/DeleteDataSet.hs",
        "gen/Network/AWS/DataExchange/DeleteEventAction.hs",
        "gen/Network/AWS/DataExchange/DeleteRevision.hs",
        "gen/Network/AWS/DataExchange/GetAsset.hs",
        "gen/Network/AWS/DataExchange/GetDataSet.hs",
        "gen/Network/AWS/DataExchange/GetEventAction.hs",
        "gen/Network/AWS/DataExchange/GetJob.hs",
        "gen/Network/AWS/DataExchange/GetRevision.hs",
        "gen/Network/AWS/DataExchange/Lens.hs",
        "gen/Network/AWS/DataExchange/ListDataSetRevisions.hs",
        "gen/Network/AWS/DataExchange/ListDataSets.hs",
        "gen/Network/AWS/DataExchange/ListEventActions.hs",
        "gen/Network/AWS/DataExchange/ListJobs.hs",
        "gen/Network/AWS/DataExchange/ListRevisionAssets.hs",
        "gen/Network/AWS/DataExchange/ListTagsForResource.hs",
        "gen/Network/AWS/DataExchange/StartJob.hs",
        "gen/Network/AWS/DataExchange/TagResource.hs",
        "gen/Network/AWS/DataExchange/Types.hs",
        "gen/Network/AWS/DataExchange/Types/Action.hs",
        "gen/Network/AWS/DataExchange/Types/AssetDestinationEntry.hs",
        "gen/Network/AWS/DataExchange/Types/AssetDetails.hs",
        "gen/Network/AWS/DataExchange/Types/AssetEntry.hs",
        "gen/Network/AWS/DataExchange/Types/AssetSourceEntry.hs",
        "gen/Network/AWS/DataExchange/Types/AssetType.hs",
        "gen/Network/AWS/DataExchange/Types/AutoExportRevisionDestinationEntry.hs",
        "gen/Network/AWS/DataExchange/Types/AutoExportRevisionToS3RequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/Code.hs",
        "gen/Network/AWS/DataExchange/Types/DataSetEntry.hs",
        "gen/Network/AWS/DataExchange/Types/Details.hs",
        "gen/Network/AWS/DataExchange/Types/Event.hs",
        "gen/Network/AWS/DataExchange/Types/EventActionEntry.hs",
        "gen/Network/AWS/DataExchange/Types/ExportAssetToSignedUrlRequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportAssetToSignedUrlResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportAssetsToS3RequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportAssetsToS3ResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportRevisionsToS3RequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportRevisionsToS3ResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ExportServerSideEncryption.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetFromSignedUrlJobErrorDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetFromSignedUrlRequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetFromSignedUrlResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetsFromRedshiftDataSharesRequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetsFromRedshiftDataSharesResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetsFromS3RequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ImportAssetsFromS3ResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/JobEntry.hs",
        "gen/Network/AWS/DataExchange/Types/JobError.hs",
        "gen/Network/AWS/DataExchange/Types/JobErrorLimitName.hs",
        "gen/Network/AWS/DataExchange/Types/JobErrorResourceTypes.hs",
        "gen/Network/AWS/DataExchange/Types/Origin.hs",
        "gen/Network/AWS/DataExchange/Types/OriginDetails.hs",
        "gen/Network/AWS/DataExchange/Types/RedshiftDataShareAsset.hs",
        "gen/Network/AWS/DataExchange/Types/RedshiftDataShareAssetSourceEntry.hs",
        "gen/Network/AWS/DataExchange/Types/RequestDetails.hs",
        "gen/Network/AWS/DataExchange/Types/ResponseDetails.hs",
        "gen/Network/AWS/DataExchange/Types/RevisionDestinationEntry.hs",
        "gen/Network/AWS/DataExchange/Types/RevisionEntry.hs",
        "gen/Network/AWS/DataExchange/Types/RevisionPublished.hs",
        "gen/Network/AWS/DataExchange/Types/S3SnapshotAsset.hs",
        "gen/Network/AWS/DataExchange/Types/ServerSideEncryptionTypes.hs",
        "gen/Network/AWS/DataExchange/Types/State.hs",
        "gen/Network/AWS/DataExchange/Types/Type.hs",
        "gen/Network/AWS/DataExchange/UntagResource.hs",
        "gen/Network/AWS/DataExchange/UpdateAsset.hs",
        "gen/Network/AWS/DataExchange/UpdateDataSet.hs",
        "gen/Network/AWS/DataExchange/UpdateEventAction.hs",
        "gen/Network/AWS/DataExchange/UpdateRevision.hs",
        "gen/Network/AWS/DataExchange/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_dataexchange=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-dataexchange/amazonka-dataexchange.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-dataexchange-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/DataExchange.hs",
        "test/Test/AWS/DataExchange/Internal.hs",
        "test/Test/AWS/Gen/DataExchange.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_dataexchange=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-dataexchange",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
