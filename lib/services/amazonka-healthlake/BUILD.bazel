load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-healthlake/amazonka-healthlake.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-healthlake",
    srcs = [
        "gen/Network/AWS/HealthLake.hs",
        "gen/Network/AWS/HealthLake/CreateFHIRDatastore.hs",
        "gen/Network/AWS/HealthLake/DeleteFHIRDatastore.hs",
        "gen/Network/AWS/HealthLake/DescribeFHIRDatastore.hs",
        "gen/Network/AWS/HealthLake/DescribeFHIRExportJob.hs",
        "gen/Network/AWS/HealthLake/DescribeFHIRImportJob.hs",
        "gen/Network/AWS/HealthLake/Lens.hs",
        "gen/Network/AWS/HealthLake/ListFHIRDatastores.hs",
        "gen/Network/AWS/HealthLake/ListFHIRExportJobs.hs",
        "gen/Network/AWS/HealthLake/ListFHIRImportJobs.hs",
        "gen/Network/AWS/HealthLake/ListTagsForResource.hs",
        "gen/Network/AWS/HealthLake/StartFHIRExportJob.hs",
        "gen/Network/AWS/HealthLake/StartFHIRImportJob.hs",
        "gen/Network/AWS/HealthLake/TagResource.hs",
        "gen/Network/AWS/HealthLake/Types.hs",
        "gen/Network/AWS/HealthLake/Types/CmkType.hs",
        "gen/Network/AWS/HealthLake/Types/DatastoreFilter.hs",
        "gen/Network/AWS/HealthLake/Types/DatastoreProperties.hs",
        "gen/Network/AWS/HealthLake/Types/DatastoreStatus.hs",
        "gen/Network/AWS/HealthLake/Types/ExportJobProperties.hs",
        "gen/Network/AWS/HealthLake/Types/FHIRVersion.hs",
        "gen/Network/AWS/HealthLake/Types/ImportJobProperties.hs",
        "gen/Network/AWS/HealthLake/Types/InputDataConfig.hs",
        "gen/Network/AWS/HealthLake/Types/JobStatus.hs",
        "gen/Network/AWS/HealthLake/Types/KmsEncryptionConfig.hs",
        "gen/Network/AWS/HealthLake/Types/OutputDataConfig.hs",
        "gen/Network/AWS/HealthLake/Types/PreloadDataConfig.hs",
        "gen/Network/AWS/HealthLake/Types/PreloadDataType.hs",
        "gen/Network/AWS/HealthLake/Types/S3Configuration.hs",
        "gen/Network/AWS/HealthLake/Types/SseConfiguration.hs",
        "gen/Network/AWS/HealthLake/Types/Tag.hs",
        "gen/Network/AWS/HealthLake/UntagResource.hs",
        "gen/Network/AWS/HealthLake/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_healthlake=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-healthlake/amazonka-healthlake.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-healthlake-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/HealthLake.hs",
        "test/Test/AWS/HealthLake.hs",
        "test/Test/AWS/HealthLake/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_healthlake=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-healthlake",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
