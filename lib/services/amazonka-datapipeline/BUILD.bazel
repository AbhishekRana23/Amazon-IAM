load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-datapipeline/amazonka-datapipeline.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-datapipeline",
    srcs = [
        "gen/Network/AWS/DataPipeline.hs",
        "gen/Network/AWS/DataPipeline/ActivatePipeline.hs",
        "gen/Network/AWS/DataPipeline/AddTags.hs",
        "gen/Network/AWS/DataPipeline/CreatePipeline.hs",
        "gen/Network/AWS/DataPipeline/DeactivatePipeline.hs",
        "gen/Network/AWS/DataPipeline/DeletePipeline.hs",
        "gen/Network/AWS/DataPipeline/DescribeObjects.hs",
        "gen/Network/AWS/DataPipeline/DescribePipelines.hs",
        "gen/Network/AWS/DataPipeline/EvaluateExpression.hs",
        "gen/Network/AWS/DataPipeline/GetPipelineDefinition.hs",
        "gen/Network/AWS/DataPipeline/Lens.hs",
        "gen/Network/AWS/DataPipeline/ListPipelines.hs",
        "gen/Network/AWS/DataPipeline/PollForTask.hs",
        "gen/Network/AWS/DataPipeline/PutPipelineDefinition.hs",
        "gen/Network/AWS/DataPipeline/QueryObjects.hs",
        "gen/Network/AWS/DataPipeline/RemoveTags.hs",
        "gen/Network/AWS/DataPipeline/ReportTaskProgress.hs",
        "gen/Network/AWS/DataPipeline/ReportTaskRunnerHeartbeat.hs",
        "gen/Network/AWS/DataPipeline/SetStatus.hs",
        "gen/Network/AWS/DataPipeline/SetTaskStatus.hs",
        "gen/Network/AWS/DataPipeline/Types.hs",
        "gen/Network/AWS/DataPipeline/Types/Field.hs",
        "gen/Network/AWS/DataPipeline/Types/InstanceIdentity.hs",
        "gen/Network/AWS/DataPipeline/Types/Operator.hs",
        "gen/Network/AWS/DataPipeline/Types/OperatorType.hs",
        "gen/Network/AWS/DataPipeline/Types/ParameterAttribute.hs",
        "gen/Network/AWS/DataPipeline/Types/ParameterObject.hs",
        "gen/Network/AWS/DataPipeline/Types/ParameterValue.hs",
        "gen/Network/AWS/DataPipeline/Types/PipelineDescription.hs",
        "gen/Network/AWS/DataPipeline/Types/PipelineIdName.hs",
        "gen/Network/AWS/DataPipeline/Types/PipelineObject.hs",
        "gen/Network/AWS/DataPipeline/Types/Query.hs",
        "gen/Network/AWS/DataPipeline/Types/Selector.hs",
        "gen/Network/AWS/DataPipeline/Types/Tag.hs",
        "gen/Network/AWS/DataPipeline/Types/TaskObject.hs",
        "gen/Network/AWS/DataPipeline/Types/TaskStatus.hs",
        "gen/Network/AWS/DataPipeline/Types/ValidationError.hs",
        "gen/Network/AWS/DataPipeline/Types/ValidationWarning.hs",
        "gen/Network/AWS/DataPipeline/ValidatePipelineDefinition.hs",
        "gen/Network/AWS/DataPipeline/Waiters.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
        "-DVERSION_amazonka_datapipeline=\"2.0\"",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-datapipeline/amazonka-datapipeline.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-datapipeline-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/DataPipeline.hs",
        "test/Test/AWS/DataPipeline/Internal.hs",
        "test/Test/AWS/Gen/DataPipeline.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-threaded",
        "-DVERSION_amazonka_datapipeline=\"2.0\"",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-datapipeline",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
