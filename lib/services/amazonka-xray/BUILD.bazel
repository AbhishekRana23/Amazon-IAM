load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-xray/amazonka-xray.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-xray",
    srcs = [
        "gen/Network/AWS/XRay.hs",
        "gen/Network/AWS/XRay/BatchGetTraces.hs",
        "gen/Network/AWS/XRay/CreateGroup.hs",
        "gen/Network/AWS/XRay/CreateSamplingRule.hs",
        "gen/Network/AWS/XRay/DeleteGroup.hs",
        "gen/Network/AWS/XRay/DeleteSamplingRule.hs",
        "gen/Network/AWS/XRay/GetEncryptionConfig.hs",
        "gen/Network/AWS/XRay/GetGroup.hs",
        "gen/Network/AWS/XRay/GetGroups.hs",
        "gen/Network/AWS/XRay/GetInsight.hs",
        "gen/Network/AWS/XRay/GetInsightEvents.hs",
        "gen/Network/AWS/XRay/GetInsightImpactGraph.hs",
        "gen/Network/AWS/XRay/GetInsightSummaries.hs",
        "gen/Network/AWS/XRay/GetSamplingRules.hs",
        "gen/Network/AWS/XRay/GetSamplingStatisticSummaries.hs",
        "gen/Network/AWS/XRay/GetSamplingTargets.hs",
        "gen/Network/AWS/XRay/GetServiceGraph.hs",
        "gen/Network/AWS/XRay/GetTimeSeriesServiceStatistics.hs",
        "gen/Network/AWS/XRay/GetTraceGraph.hs",
        "gen/Network/AWS/XRay/GetTraceSummaries.hs",
        "gen/Network/AWS/XRay/Lens.hs",
        "gen/Network/AWS/XRay/ListTagsForResource.hs",
        "gen/Network/AWS/XRay/PutEncryptionConfig.hs",
        "gen/Network/AWS/XRay/PutTelemetryRecords.hs",
        "gen/Network/AWS/XRay/PutTraceSegments.hs",
        "gen/Network/AWS/XRay/TagResource.hs",
        "gen/Network/AWS/XRay/Types.hs",
        "gen/Network/AWS/XRay/Types/Alias.hs",
        "gen/Network/AWS/XRay/Types/AnnotationValue.hs",
        "gen/Network/AWS/XRay/Types/AnomalousService.hs",
        "gen/Network/AWS/XRay/Types/AvailabilityZoneDetail.hs",
        "gen/Network/AWS/XRay/Types/BackendConnectionErrors.hs",
        "gen/Network/AWS/XRay/Types/Edge.hs",
        "gen/Network/AWS/XRay/Types/EdgeStatistics.hs",
        "gen/Network/AWS/XRay/Types/EncryptionConfig.hs",
        "gen/Network/AWS/XRay/Types/EncryptionStatus.hs",
        "gen/Network/AWS/XRay/Types/EncryptionType.hs",
        "gen/Network/AWS/XRay/Types/ErrorRootCause.hs",
        "gen/Network/AWS/XRay/Types/ErrorRootCauseEntity.hs",
        "gen/Network/AWS/XRay/Types/ErrorRootCauseService.hs",
        "gen/Network/AWS/XRay/Types/ErrorStatistics.hs",
        "gen/Network/AWS/XRay/Types/FaultRootCause.hs",
        "gen/Network/AWS/XRay/Types/FaultRootCauseEntity.hs",
        "gen/Network/AWS/XRay/Types/FaultRootCauseService.hs",
        "gen/Network/AWS/XRay/Types/FaultStatistics.hs",
        "gen/Network/AWS/XRay/Types/ForecastStatistics.hs",
        "gen/Network/AWS/XRay/Types/Group.hs",
        "gen/Network/AWS/XRay/Types/GroupSummary.hs",
        "gen/Network/AWS/XRay/Types/HistogramEntry.hs",
        "gen/Network/AWS/XRay/Types/Http.hs",
        "gen/Network/AWS/XRay/Types/Insight.hs",
        "gen/Network/AWS/XRay/Types/InsightCategory.hs",
        "gen/Network/AWS/XRay/Types/InsightEvent.hs",
        "gen/Network/AWS/XRay/Types/InsightImpactGraphEdge.hs",
        "gen/Network/AWS/XRay/Types/InsightImpactGraphService.hs",
        "gen/Network/AWS/XRay/Types/InsightState.hs",
        "gen/Network/AWS/XRay/Types/InsightSummary.hs",
        "gen/Network/AWS/XRay/Types/InsightsConfiguration.hs",
        "gen/Network/AWS/XRay/Types/InstanceIdDetail.hs",
        "gen/Network/AWS/XRay/Types/RequestImpactStatistics.hs",
        "gen/Network/AWS/XRay/Types/ResourceARNDetail.hs",
        "gen/Network/AWS/XRay/Types/ResponseTimeRootCause.hs",
        "gen/Network/AWS/XRay/Types/ResponseTimeRootCauseEntity.hs",
        "gen/Network/AWS/XRay/Types/ResponseTimeRootCauseService.hs",
        "gen/Network/AWS/XRay/Types/RootCauseException.hs",
        "gen/Network/AWS/XRay/Types/SamplingRule.hs",
        "gen/Network/AWS/XRay/Types/SamplingRuleRecord.hs",
        "gen/Network/AWS/XRay/Types/SamplingRuleUpdate.hs",
        "gen/Network/AWS/XRay/Types/SamplingStatisticSummary.hs",
        "gen/Network/AWS/XRay/Types/SamplingStatisticsDocument.hs",
        "gen/Network/AWS/XRay/Types/SamplingStrategy.hs",
        "gen/Network/AWS/XRay/Types/SamplingStrategyName.hs",
        "gen/Network/AWS/XRay/Types/SamplingTargetDocument.hs",
        "gen/Network/AWS/XRay/Types/Segment.hs",
        "gen/Network/AWS/XRay/Types/ServiceId.hs",
        "gen/Network/AWS/XRay/Types/ServiceInfo.hs",
        "gen/Network/AWS/XRay/Types/ServiceStatistics.hs",
        "gen/Network/AWS/XRay/Types/Tag.hs",
        "gen/Network/AWS/XRay/Types/TelemetryRecord.hs",
        "gen/Network/AWS/XRay/Types/TimeRangeType.hs",
        "gen/Network/AWS/XRay/Types/TimeSeriesServiceStatistics.hs",
        "gen/Network/AWS/XRay/Types/Trace.hs",
        "gen/Network/AWS/XRay/Types/TraceSummary.hs",
        "gen/Network/AWS/XRay/Types/TraceUser.hs",
        "gen/Network/AWS/XRay/Types/UnprocessedStatistics.hs",
        "gen/Network/AWS/XRay/Types/UnprocessedTraceSegment.hs",
        "gen/Network/AWS/XRay/Types/ValueWithServiceIds.hs",
        "gen/Network/AWS/XRay/UntagResource.hs",
        "gen/Network/AWS/XRay/UpdateGroup.hs",
        "gen/Network/AWS/XRay/UpdateSamplingRule.hs",
        "gen/Network/AWS/XRay/Waiters.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
        "-DVERSION_amazonka_xray=\"2.0\"",
    ],
    hidden_modules = [],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-xray/amazonka-xray.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-xray-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/XRay.hs",
        "test/Test/AWS/XRay.hs",
        "test/Test/AWS/XRay/Internal.hs",
    ],
    compiler_flags = [
        "-Wall",
        "-threaded",
        "-DVERSION_amazonka_xray=\"2.0\"",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-xray",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
