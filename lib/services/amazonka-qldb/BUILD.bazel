load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-qldb/amazonka-qldb.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-qldb",
    srcs = [
        "gen/Network/AWS/QLDB.hs",
        "gen/Network/AWS/QLDB/CancelJournalKinesisStream.hs",
        "gen/Network/AWS/QLDB/CreateLedger.hs",
        "gen/Network/AWS/QLDB/DeleteLedger.hs",
        "gen/Network/AWS/QLDB/DescribeJournalKinesisStream.hs",
        "gen/Network/AWS/QLDB/DescribeJournalS3Export.hs",
        "gen/Network/AWS/QLDB/DescribeLedger.hs",
        "gen/Network/AWS/QLDB/ExportJournalToS.hs",
        "gen/Network/AWS/QLDB/GetBlock.hs",
        "gen/Network/AWS/QLDB/GetDigest.hs",
        "gen/Network/AWS/QLDB/GetRevision.hs",
        "gen/Network/AWS/QLDB/Lens.hs",
        "gen/Network/AWS/QLDB/ListJournalKinesisStreamsForLedger.hs",
        "gen/Network/AWS/QLDB/ListJournalS3Exports.hs",
        "gen/Network/AWS/QLDB/ListJournalS3ExportsForLedger.hs",
        "gen/Network/AWS/QLDB/ListLedgers.hs",
        "gen/Network/AWS/QLDB/ListTagsForResource.hs",
        "gen/Network/AWS/QLDB/StreamJournalToKinesis.hs",
        "gen/Network/AWS/QLDB/TagResource.hs",
        "gen/Network/AWS/QLDB/Types.hs",
        "gen/Network/AWS/QLDB/Types/EncryptionStatus.hs",
        "gen/Network/AWS/QLDB/Types/ErrorCause.hs",
        "gen/Network/AWS/QLDB/Types/ExportStatus.hs",
        "gen/Network/AWS/QLDB/Types/JournalKinesisStreamDescription.hs",
        "gen/Network/AWS/QLDB/Types/JournalS3ExportDescription.hs",
        "gen/Network/AWS/QLDB/Types/KinesisConfiguration.hs",
        "gen/Network/AWS/QLDB/Types/LedgerEncryptionDescription.hs",
        "gen/Network/AWS/QLDB/Types/LedgerState.hs",
        "gen/Network/AWS/QLDB/Types/LedgerSummary.hs",
        "gen/Network/AWS/QLDB/Types/PermissionsMode.hs",
        "gen/Network/AWS/QLDB/Types/S3EncryptionConfiguration.hs",
        "gen/Network/AWS/QLDB/Types/S3ExportConfiguration.hs",
        "gen/Network/AWS/QLDB/Types/S3ObjectEncryptionType.hs",
        "gen/Network/AWS/QLDB/Types/StreamStatus.hs",
        "gen/Network/AWS/QLDB/Types/ValueHolder.hs",
        "gen/Network/AWS/QLDB/UntagResource.hs",
        "gen/Network/AWS/QLDB/UpdateLedger.hs",
        "gen/Network/AWS/QLDB/UpdateLedgerPermissionsMode.hs",
        "gen/Network/AWS/QLDB/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_qldb=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-qldb/amazonka-qldb.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-qldb-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/QLDB.hs",
        "test/Test/AWS/QLDB.hs",
        "test/Test/AWS/QLDB/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_qldb=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-qldb",
        "//lib/amazonka",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
