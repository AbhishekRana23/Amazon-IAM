cabal-version:      2.2
name:               amazonka-schemas
version:            2.0
synopsis:           Amazon Schemas SDK.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:          Copyright (c) 2013-2021 Brendan Hay
category:           AWS
build-type:         Simple
extra-source-files:
  fixture/*.proto
  fixture/*.yaml
  README.md
  src/.gitkeep

description:
  Derived from API version @2019-12-02@ of the AWS service descriptions, licensed under Apache 2.0.
  .
  The types from this library are intended to be used with <http://hackage.haskell.org/package/amazonka amazonka>,
  which provides mechanisms for specifying AuthN/AuthZ information, sending requests, and receiving responses.
  .
  It is recommended to use generic lenses or optics from packages such as <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify optional fields and deconstruct responses.
  .
  Generated lenses for legacy behaviour can be found in "Network.AWS.Schemas.Lens"
  and are suitable for use with a lens package such as <http://hackage.haskell.org/package/lens lens> or <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
  .
  Additional types and functions from <https://hackage.haskell.org/package/amazonka-core amazonka-core> are re-exported by the "Network.AWS.Prelude" module in this package.
  .
  See "Network.AWS.Schemas" and the <https://aws.amazon.com/documentation/ AWS documentation> to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git
  subdir:   amazonka-schemas

library
  default-language:   Haskell2010
  hs-source-dirs:     src gen
  ghc-options:
    -Wall -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates -funbox-strict-fields

  exposed-modules:
    Network.AWS.Schemas
    Network.AWS.Schemas.CreateDiscoverer
    Network.AWS.Schemas.CreateRegistry
    Network.AWS.Schemas.CreateSchema
    Network.AWS.Schemas.DeleteDiscoverer
    Network.AWS.Schemas.DeleteRegistry
    Network.AWS.Schemas.DeleteResourcePolicy
    Network.AWS.Schemas.DeleteSchema
    Network.AWS.Schemas.DeleteSchemaVersion
    Network.AWS.Schemas.DescribeCodeBinding
    Network.AWS.Schemas.DescribeDiscoverer
    Network.AWS.Schemas.DescribeRegistry
    Network.AWS.Schemas.DescribeSchema
    Network.AWS.Schemas.ExportSchema
    Network.AWS.Schemas.GetCodeBindingSource
    Network.AWS.Schemas.GetDiscoveredSchema
    Network.AWS.Schemas.GetResourcePolicy
    Network.AWS.Schemas.Lens
    Network.AWS.Schemas.ListDiscoverers
    Network.AWS.Schemas.ListRegistries
    Network.AWS.Schemas.ListSchemas
    Network.AWS.Schemas.ListSchemaVersions
    Network.AWS.Schemas.ListTagsForResource
    Network.AWS.Schemas.PutCodeBinding
    Network.AWS.Schemas.PutResourcePolicy
    Network.AWS.Schemas.SearchSchemas
    Network.AWS.Schemas.StartDiscoverer
    Network.AWS.Schemas.StopDiscoverer
    Network.AWS.Schemas.TagResource
    Network.AWS.Schemas.Types
    Network.AWS.Schemas.Types.CodeGenerationStatus
    Network.AWS.Schemas.Types.DiscovererState
    Network.AWS.Schemas.Types.DiscovererSummary
    Network.AWS.Schemas.Types.RegistrySummary
    Network.AWS.Schemas.Types.SchemaSummary
    Network.AWS.Schemas.Types.SchemaVersionSummary
    Network.AWS.Schemas.Types.SearchSchemaSummary
    Network.AWS.Schemas.Types.SearchSchemaVersionSummary
    Network.AWS.Schemas.Types.Type
    Network.AWS.Schemas.UntagResource
    Network.AWS.Schemas.UpdateDiscoverer
    Network.AWS.Schemas.UpdateRegistry
    Network.AWS.Schemas.UpdateSchema
    Network.AWS.Schemas.Waiters

  reexported-modules: Network.AWS
  build-depends:
    , amazonka  ^>=2.0
    , base      >=4.12 && <5

test-suite amazonka-schemas-test
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Main.hs
  ghc-options:      -Wall -threaded

  -- This section is encoded by the template and any modules added by
  -- hand outside these namespaces will not correctly be added to the
  -- distribution package.
  other-modules:
    Test.AWS.Gen.Schemas
    Test.AWS.Schemas
    Test.AWS.Schemas.Internal

  build-depends:
    , amazonka              ^>=2.0
    , amazonka-schemas
    , amazonka-test         ^>=2.0
    , base
    , bytestring
    , case-insensitive
    , tasty
    , tasty-hunit
    , text
    , time
    , unordered-containers
