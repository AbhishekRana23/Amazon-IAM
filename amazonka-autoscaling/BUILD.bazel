load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-autoscaling/amazonka-autoscaling.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-autoscaling",
    srcs = [
        "gen/Network/AWS/AutoScaling.hs",
        "gen/Network/AWS/AutoScaling/AttachInstances.hs",
        "gen/Network/AWS/AutoScaling/AttachLoadBalancerTargetGroups.hs",
        "gen/Network/AWS/AutoScaling/AttachLoadBalancers.hs",
        "gen/Network/AWS/AutoScaling/BatchDeleteScheduledAction.hs",
        "gen/Network/AWS/AutoScaling/BatchPutScheduledUpdateGroupAction.hs",
        "gen/Network/AWS/AutoScaling/CancelInstanceRefresh.hs",
        "gen/Network/AWS/AutoScaling/CompleteLifecycleAction.hs",
        "gen/Network/AWS/AutoScaling/CreateAutoScalingGroup.hs",
        "gen/Network/AWS/AutoScaling/CreateLaunchConfiguration.hs",
        "gen/Network/AWS/AutoScaling/CreateOrUpdateTags.hs",
        "gen/Network/AWS/AutoScaling/DeleteAutoScalingGroup.hs",
        "gen/Network/AWS/AutoScaling/DeleteLaunchConfiguration.hs",
        "gen/Network/AWS/AutoScaling/DeleteLifecycleHook.hs",
        "gen/Network/AWS/AutoScaling/DeleteNotificationConfiguration.hs",
        "gen/Network/AWS/AutoScaling/DeletePolicy.hs",
        "gen/Network/AWS/AutoScaling/DeleteScheduledAction.hs",
        "gen/Network/AWS/AutoScaling/DeleteTags.hs",
        "gen/Network/AWS/AutoScaling/DeleteWarmPool.hs",
        "gen/Network/AWS/AutoScaling/DescribeAccountLimits.hs",
        "gen/Network/AWS/AutoScaling/DescribeAdjustmentTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeAutoScalingGroups.hs",
        "gen/Network/AWS/AutoScaling/DescribeAutoScalingInstances.hs",
        "gen/Network/AWS/AutoScaling/DescribeAutoScalingNotificationTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeInstanceRefreshes.hs",
        "gen/Network/AWS/AutoScaling/DescribeLaunchConfigurations.hs",
        "gen/Network/AWS/AutoScaling/DescribeLifecycleHookTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeLifecycleHooks.hs",
        "gen/Network/AWS/AutoScaling/DescribeLoadBalancerTargetGroups.hs",
        "gen/Network/AWS/AutoScaling/DescribeLoadBalancers.hs",
        "gen/Network/AWS/AutoScaling/DescribeMetricCollectionTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeNotificationConfigurations.hs",
        "gen/Network/AWS/AutoScaling/DescribePolicies.hs",
        "gen/Network/AWS/AutoScaling/DescribeScalingActivities.hs",
        "gen/Network/AWS/AutoScaling/DescribeScalingProcessTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeScheduledActions.hs",
        "gen/Network/AWS/AutoScaling/DescribeTags.hs",
        "gen/Network/AWS/AutoScaling/DescribeTerminationPolicyTypes.hs",
        "gen/Network/AWS/AutoScaling/DescribeWarmPool.hs",
        "gen/Network/AWS/AutoScaling/DetachInstances.hs",
        "gen/Network/AWS/AutoScaling/DetachLoadBalancerTargetGroups.hs",
        "gen/Network/AWS/AutoScaling/DetachLoadBalancers.hs",
        "gen/Network/AWS/AutoScaling/DisableMetricsCollection.hs",
        "gen/Network/AWS/AutoScaling/EnableMetricsCollection.hs",
        "gen/Network/AWS/AutoScaling/EnterStandby.hs",
        "gen/Network/AWS/AutoScaling/ExecutePolicy.hs",
        "gen/Network/AWS/AutoScaling/ExitStandby.hs",
        "gen/Network/AWS/AutoScaling/GetPredictiveScalingForecast.hs",
        "gen/Network/AWS/AutoScaling/Lens.hs",
        "gen/Network/AWS/AutoScaling/PutLifecycleHook.hs",
        "gen/Network/AWS/AutoScaling/PutNotificationConfiguration.hs",
        "gen/Network/AWS/AutoScaling/PutScalingPolicy.hs",
        "gen/Network/AWS/AutoScaling/PutScheduledUpdateGroupAction.hs",
        "gen/Network/AWS/AutoScaling/PutWarmPool.hs",
        "gen/Network/AWS/AutoScaling/RecordLifecycleActionHeartbeat.hs",
        "gen/Network/AWS/AutoScaling/ResumeProcesses.hs",
        "gen/Network/AWS/AutoScaling/SetDesiredCapacity.hs",
        "gen/Network/AWS/AutoScaling/SetInstanceHealth.hs",
        "gen/Network/AWS/AutoScaling/SetInstanceProtection.hs",
        "gen/Network/AWS/AutoScaling/StartInstanceRefresh.hs",
        "gen/Network/AWS/AutoScaling/SuspendProcesses.hs",
        "gen/Network/AWS/AutoScaling/TerminateInstanceInAutoScalingGroup.hs",
        "gen/Network/AWS/AutoScaling/Types.hs",
        "gen/Network/AWS/AutoScaling/Types/Activity.hs",
        "gen/Network/AWS/AutoScaling/Types/AdjustmentType.hs",
        "gen/Network/AWS/AutoScaling/Types/Alarm.hs",
        "gen/Network/AWS/AutoScaling/Types/AutoScalingGroup.hs",
        "gen/Network/AWS/AutoScaling/Types/AutoScalingInstanceDetails.hs",
        "gen/Network/AWS/AutoScaling/Types/BlockDeviceMapping.hs",
        "gen/Network/AWS/AutoScaling/Types/CapacityForecast.hs",
        "gen/Network/AWS/AutoScaling/Types/CustomizedMetricSpecification.hs",
        "gen/Network/AWS/AutoScaling/Types/DesiredConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/Ebs.hs",
        "gen/Network/AWS/AutoScaling/Types/EnabledMetric.hs",
        "gen/Network/AWS/AutoScaling/Types/FailedScheduledUpdateGroupActionRequest.hs",
        "gen/Network/AWS/AutoScaling/Types/Filter.hs",
        "gen/Network/AWS/AutoScaling/Types/Instance.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceMetadataEndpointState.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceMetadataHttpTokensState.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceMetadataOptions.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceMonitoring.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceRefresh.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceRefreshLivePoolProgress.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceRefreshProgressDetails.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceRefreshStatus.hs",
        "gen/Network/AWS/AutoScaling/Types/InstanceRefreshWarmPoolProgress.hs",
        "gen/Network/AWS/AutoScaling/Types/InstancesDistribution.hs",
        "gen/Network/AWS/AutoScaling/Types/LaunchConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/LaunchTemplate.hs",
        "gen/Network/AWS/AutoScaling/Types/LaunchTemplateOverrides.hs",
        "gen/Network/AWS/AutoScaling/Types/LaunchTemplateSpecification.hs",
        "gen/Network/AWS/AutoScaling/Types/LifecycleHook.hs",
        "gen/Network/AWS/AutoScaling/Types/LifecycleHookSpecification.hs",
        "gen/Network/AWS/AutoScaling/Types/LifecycleState.hs",
        "gen/Network/AWS/AutoScaling/Types/LoadBalancerState.hs",
        "gen/Network/AWS/AutoScaling/Types/LoadBalancerTargetGroupState.hs",
        "gen/Network/AWS/AutoScaling/Types/LoadForecast.hs",
        "gen/Network/AWS/AutoScaling/Types/MetricCollectionType.hs",
        "gen/Network/AWS/AutoScaling/Types/MetricDimension.hs",
        "gen/Network/AWS/AutoScaling/Types/MetricGranularityType.hs",
        "gen/Network/AWS/AutoScaling/Types/MetricStatistic.hs",
        "gen/Network/AWS/AutoScaling/Types/MetricType.hs",
        "gen/Network/AWS/AutoScaling/Types/MixedInstancesPolicy.hs",
        "gen/Network/AWS/AutoScaling/Types/NotificationConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/PredefinedLoadMetricType.hs",
        "gen/Network/AWS/AutoScaling/Types/PredefinedMetricPairType.hs",
        "gen/Network/AWS/AutoScaling/Types/PredefinedMetricSpecification.hs",
        "gen/Network/AWS/AutoScaling/Types/PredefinedScalingMetricType.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingMaxCapacityBreachBehavior.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingMetricSpecification.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingMode.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingPredefinedLoadMetric.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingPredefinedMetricPair.hs",
        "gen/Network/AWS/AutoScaling/Types/PredictiveScalingPredefinedScalingMetric.hs",
        "gen/Network/AWS/AutoScaling/Types/ProcessType.hs",
        "gen/Network/AWS/AutoScaling/Types/RefreshPreferences.hs",
        "gen/Network/AWS/AutoScaling/Types/RefreshStrategy.hs",
        "gen/Network/AWS/AutoScaling/Types/ScalingActivityStatusCode.hs",
        "gen/Network/AWS/AutoScaling/Types/ScalingPolicy.hs",
        "gen/Network/AWS/AutoScaling/Types/ScalingProcessQuery.hs",
        "gen/Network/AWS/AutoScaling/Types/ScheduledUpdateGroupAction.hs",
        "gen/Network/AWS/AutoScaling/Types/ScheduledUpdateGroupActionRequest.hs",
        "gen/Network/AWS/AutoScaling/Types/StepAdjustment.hs",
        "gen/Network/AWS/AutoScaling/Types/SuspendedProcess.hs",
        "gen/Network/AWS/AutoScaling/Types/Tag.hs",
        "gen/Network/AWS/AutoScaling/Types/TagDescription.hs",
        "gen/Network/AWS/AutoScaling/Types/TargetTrackingConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/WarmPoolConfiguration.hs",
        "gen/Network/AWS/AutoScaling/Types/WarmPoolState.hs",
        "gen/Network/AWS/AutoScaling/Types/WarmPoolStatus.hs",
        "gen/Network/AWS/AutoScaling/UpdateAutoScalingGroup.hs",
        "gen/Network/AWS/AutoScaling/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_autoscaling=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-autoscaling/amazonka-autoscaling.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-autoscaling-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/AutoScaling.hs",
        "test/Test/AWS/AutoScaling/Internal.hs",
        "test/Test/AWS/Gen/AutoScaling.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_autoscaling=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-autoscaling",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
