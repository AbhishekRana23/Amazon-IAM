name: documentation

on:
  workflow_dispatch: null
  push:
    branches: null
    paths:
      - 'WORKSPACE'
      - 'docs'
      - '**.nix'
  pull_request:
    branches: develop
    paths:
      - 'WORKSPACE'
      - 'docs'
      - '**.nix'

jobs:
  documentation:
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest, ghc: 8107  }

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Free space
        run: sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt &

      - name: Setup nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=./nix/nixpkgs.nix

      - name: Setup nix cache
        uses: cachix/cachix-action@v8
        with:
          name: amazonka
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Setup local bazel cache
        uses: actions/cache@v2
        with:
          key: cache-${{ runner.os }}-${{ matrix.ghc }}
          restore-keys: |
            cache-${{ runner.os }}
          path: |
            ~/.cache/bazel/amazonka

      - name: Setup writable remote bazel cache
        if: ${{ github.repository == 'brendanhay/amazonka' }}
        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        run: |
          cp .bazelrc.{ci,local}

          printf '%s\n' >/tmp/credentials.json \
            "$SERVICE_ACCOUNT"

      - name: bazel build //docs
        run: |
          nix-shell --argstr ghcVersion '${{ matrix.ghc }}' --run \
            'bazel build //docs:site'

      - name: Push to GitHub pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: bazel-bin/docs/site
