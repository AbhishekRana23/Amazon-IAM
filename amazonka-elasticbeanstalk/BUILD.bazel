load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-elasticbeanstalk/amazonka-elasticbeanstalk.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-elasticbeanstalk",
    srcs = [
        "gen/Network/AWS/ElasticBeanstalk.hs",
        "gen/Network/AWS/ElasticBeanstalk/AbortEnvironmentUpdate.hs",
        "gen/Network/AWS/ElasticBeanstalk/ApplyEnvironmentManagedAction.hs",
        "gen/Network/AWS/ElasticBeanstalk/AssociateEnvironmentOperationsRole.hs",
        "gen/Network/AWS/ElasticBeanstalk/CheckDNSAvailability.hs",
        "gen/Network/AWS/ElasticBeanstalk/ComposeEnvironments.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreateApplication.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreateApplicationVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreateConfigurationTemplate.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreateEnvironment.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreatePlatformVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/CreateStorageLocation.hs",
        "gen/Network/AWS/ElasticBeanstalk/DeleteApplication.hs",
        "gen/Network/AWS/ElasticBeanstalk/DeleteApplicationVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/DeleteConfigurationTemplate.hs",
        "gen/Network/AWS/ElasticBeanstalk/DeleteEnvironmentConfiguration.hs",
        "gen/Network/AWS/ElasticBeanstalk/DeletePlatformVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeAccountAttributes.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeApplicationVersions.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeApplications.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeConfigurationOptions.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeConfigurationSettings.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEnvironmentHealth.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEnvironmentManagedActionHistory.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEnvironmentManagedActions.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEnvironmentResources.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEnvironments.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeEvents.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribeInstancesHealth.hs",
        "gen/Network/AWS/ElasticBeanstalk/DescribePlatformVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/DisassociateEnvironmentOperationsRole.hs",
        "gen/Network/AWS/ElasticBeanstalk/Lens.hs",
        "gen/Network/AWS/ElasticBeanstalk/ListAvailableSolutionStacks.hs",
        "gen/Network/AWS/ElasticBeanstalk/ListPlatformBranches.hs",
        "gen/Network/AWS/ElasticBeanstalk/ListPlatformVersions.hs",
        "gen/Network/AWS/ElasticBeanstalk/ListTagsForResource.hs",
        "gen/Network/AWS/ElasticBeanstalk/RebuildEnvironment.hs",
        "gen/Network/AWS/ElasticBeanstalk/RequestEnvironmentInfo.hs",
        "gen/Network/AWS/ElasticBeanstalk/RestartAppServer.hs",
        "gen/Network/AWS/ElasticBeanstalk/RetrieveEnvironmentInfo.hs",
        "gen/Network/AWS/ElasticBeanstalk/SwapEnvironmentCNAMEs.hs",
        "gen/Network/AWS/ElasticBeanstalk/TerminateEnvironment.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ActionHistoryStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ActionStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ActionType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationDescriptionMessage.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationMetrics.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationResourceLifecycleConfig.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationVersionDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationVersionDescriptionMessage.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationVersionLifecycleConfig.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ApplicationVersionStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/AutoScalingGroup.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/BuildConfiguration.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Builder.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/CPUUtilization.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ComputeType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ConfigurationDeploymentStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ConfigurationOptionDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ConfigurationOptionSetting.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ConfigurationOptionValueType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ConfigurationSettingsDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/CustomAmi.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Deployment.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentDescriptionsMessage.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentHealth.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentHealthAttribute.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentHealthStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentInfoDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentInfoType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentLink.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentResourceDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentResourcesDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EnvironmentTier.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EventDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/EventSeverity.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/FailureType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Instance.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/InstanceHealthSummary.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/InstancesHealthAttribute.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Latency.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/LaunchConfiguration.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/LaunchTemplate.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Listener.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/LoadBalancer.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/LoadBalancerDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ManagedAction.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ManagedActionHistoryItem.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/MaxAgeRule.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/MaxCountRule.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/OptionRestrictionRegex.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/OptionSpecification.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformBranchSummary.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformFilter.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformFramework.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformProgrammingLanguage.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/PlatformSummary.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Queue.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ResourceQuota.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ResourceQuotas.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/S3Location.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SearchFilter.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SingleInstanceHealth.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SolutionStackDescription.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SourceBuildInformation.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SourceConfiguration.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SourceRepository.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SourceType.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/StatusCodes.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/SystemStatus.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Tag.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/Trigger.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ValidationMessage.hs",
        "gen/Network/AWS/ElasticBeanstalk/Types/ValidationSeverity.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateApplication.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateApplicationResourceLifecycle.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateApplicationVersion.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateConfigurationTemplate.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateEnvironment.hs",
        "gen/Network/AWS/ElasticBeanstalk/UpdateTagsForResource.hs",
        "gen/Network/AWS/ElasticBeanstalk/ValidateConfigurationSettings.hs",
        "gen/Network/AWS/ElasticBeanstalk/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_elasticbeanstalk=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-elasticbeanstalk/amazonka-elasticbeanstalk.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-elasticbeanstalk-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/ElasticBeanstalk.hs",
        "test/Test/AWS/ElasticBeanstalk/Internal.hs",
        "test/Test/AWS/Gen/ElasticBeanstalk.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_elasticbeanstalk=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-elasticbeanstalk",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
