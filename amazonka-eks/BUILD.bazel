load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-eks/amazonka-eks.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-eks",
    srcs = [
        "gen/Network/AWS/EKS.hs",
        "gen/Network/AWS/EKS/AssociateEncryptionConfig.hs",
        "gen/Network/AWS/EKS/AssociateIdentityProviderConfig.hs",
        "gen/Network/AWS/EKS/CreateAddon.hs",
        "gen/Network/AWS/EKS/CreateCluster.hs",
        "gen/Network/AWS/EKS/CreateFargateProfile.hs",
        "gen/Network/AWS/EKS/CreateNodegroup.hs",
        "gen/Network/AWS/EKS/DeleteAddon.hs",
        "gen/Network/AWS/EKS/DeleteCluster.hs",
        "gen/Network/AWS/EKS/DeleteFargateProfile.hs",
        "gen/Network/AWS/EKS/DeleteNodegroup.hs",
        "gen/Network/AWS/EKS/DeregisterCluster.hs",
        "gen/Network/AWS/EKS/DescribeAddon.hs",
        "gen/Network/AWS/EKS/DescribeAddonVersions.hs",
        "gen/Network/AWS/EKS/DescribeCluster.hs",
        "gen/Network/AWS/EKS/DescribeFargateProfile.hs",
        "gen/Network/AWS/EKS/DescribeIdentityProviderConfig.hs",
        "gen/Network/AWS/EKS/DescribeNodegroup.hs",
        "gen/Network/AWS/EKS/DescribeUpdate.hs",
        "gen/Network/AWS/EKS/DisassociateIdentityProviderConfig.hs",
        "gen/Network/AWS/EKS/Lens.hs",
        "gen/Network/AWS/EKS/ListAddons.hs",
        "gen/Network/AWS/EKS/ListClusters.hs",
        "gen/Network/AWS/EKS/ListFargateProfiles.hs",
        "gen/Network/AWS/EKS/ListIdentityProviderConfigs.hs",
        "gen/Network/AWS/EKS/ListNodegroups.hs",
        "gen/Network/AWS/EKS/ListTagsForResource.hs",
        "gen/Network/AWS/EKS/ListUpdates.hs",
        "gen/Network/AWS/EKS/RegisterCluster.hs",
        "gen/Network/AWS/EKS/TagResource.hs",
        "gen/Network/AWS/EKS/Types.hs",
        "gen/Network/AWS/EKS/Types/AMITypes.hs",
        "gen/Network/AWS/EKS/Types/Addon.hs",
        "gen/Network/AWS/EKS/Types/AddonHealth.hs",
        "gen/Network/AWS/EKS/Types/AddonInfo.hs",
        "gen/Network/AWS/EKS/Types/AddonIssue.hs",
        "gen/Network/AWS/EKS/Types/AddonIssueCode.hs",
        "gen/Network/AWS/EKS/Types/AddonStatus.hs",
        "gen/Network/AWS/EKS/Types/AddonVersionInfo.hs",
        "gen/Network/AWS/EKS/Types/AutoScalingGroup.hs",
        "gen/Network/AWS/EKS/Types/CapacityTypes.hs",
        "gen/Network/AWS/EKS/Types/Certificate.hs",
        "gen/Network/AWS/EKS/Types/Cluster.hs",
        "gen/Network/AWS/EKS/Types/ClusterStatus.hs",
        "gen/Network/AWS/EKS/Types/Compatibility.hs",
        "gen/Network/AWS/EKS/Types/ConfigStatus.hs",
        "gen/Network/AWS/EKS/Types/ConnectorConfigProvider.hs",
        "gen/Network/AWS/EKS/Types/ConnectorConfigRequest.hs",
        "gen/Network/AWS/EKS/Types/ConnectorConfigResponse.hs",
        "gen/Network/AWS/EKS/Types/EKSErrorCode.hs",
        "gen/Network/AWS/EKS/Types/EncryptionConfig.hs",
        "gen/Network/AWS/EKS/Types/ErrorDetail.hs",
        "gen/Network/AWS/EKS/Types/FargateProfile.hs",
        "gen/Network/AWS/EKS/Types/FargateProfileSelector.hs",
        "gen/Network/AWS/EKS/Types/FargateProfileStatus.hs",
        "gen/Network/AWS/EKS/Types/Identity.hs",
        "gen/Network/AWS/EKS/Types/IdentityProviderConfig.hs",
        "gen/Network/AWS/EKS/Types/IdentityProviderConfigResponse.hs",
        "gen/Network/AWS/EKS/Types/Issue.hs",
        "gen/Network/AWS/EKS/Types/KubernetesNetworkConfigRequest.hs",
        "gen/Network/AWS/EKS/Types/KubernetesNetworkConfigResponse.hs",
        "gen/Network/AWS/EKS/Types/LaunchTemplateSpecification.hs",
        "gen/Network/AWS/EKS/Types/LogSetup.hs",
        "gen/Network/AWS/EKS/Types/LogType.hs",
        "gen/Network/AWS/EKS/Types/Logging.hs",
        "gen/Network/AWS/EKS/Types/Nodegroup.hs",
        "gen/Network/AWS/EKS/Types/NodegroupHealth.hs",
        "gen/Network/AWS/EKS/Types/NodegroupIssueCode.hs",
        "gen/Network/AWS/EKS/Types/NodegroupResources.hs",
        "gen/Network/AWS/EKS/Types/NodegroupScalingConfig.hs",
        "gen/Network/AWS/EKS/Types/NodegroupStatus.hs",
        "gen/Network/AWS/EKS/Types/NodegroupUpdateConfig.hs",
        "gen/Network/AWS/EKS/Types/OIDC.hs",
        "gen/Network/AWS/EKS/Types/OidcIdentityProviderConfig.hs",
        "gen/Network/AWS/EKS/Types/OidcIdentityProviderConfigRequest.hs",
        "gen/Network/AWS/EKS/Types/Provider.hs",
        "gen/Network/AWS/EKS/Types/RemoteAccessConfig.hs",
        "gen/Network/AWS/EKS/Types/ResolveConflicts.hs",
        "gen/Network/AWS/EKS/Types/Taint.hs",
        "gen/Network/AWS/EKS/Types/TaintEffect.hs",
        "gen/Network/AWS/EKS/Types/Update.hs",
        "gen/Network/AWS/EKS/Types/UpdateLabelsPayload.hs",
        "gen/Network/AWS/EKS/Types/UpdateParam.hs",
        "gen/Network/AWS/EKS/Types/UpdateParamType.hs",
        "gen/Network/AWS/EKS/Types/UpdateStatus.hs",
        "gen/Network/AWS/EKS/Types/UpdateTaintsPayload.hs",
        "gen/Network/AWS/EKS/Types/UpdateType.hs",
        "gen/Network/AWS/EKS/Types/VpcConfigRequest.hs",
        "gen/Network/AWS/EKS/Types/VpcConfigResponse.hs",
        "gen/Network/AWS/EKS/UntagResource.hs",
        "gen/Network/AWS/EKS/UpdateAddon.hs",
        "gen/Network/AWS/EKS/UpdateClusterConfig.hs",
        "gen/Network/AWS/EKS/UpdateClusterVersion.hs",
        "gen/Network/AWS/EKS/UpdateNodegroupConfig.hs",
        "gen/Network/AWS/EKS/UpdateNodegroupVersion.hs",
        "gen/Network/AWS/EKS/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_eks=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-eks/amazonka-eks.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-eks-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/EKS.hs",
        "test/Test/AWS/EKS/Internal.hs",
        "test/Test/AWS/Gen/EKS.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_eks=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-eks",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
