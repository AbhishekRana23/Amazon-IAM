load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-autoscaling-plans/amazonka-autoscaling-plans.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-autoscaling-plans",
    srcs = [
        "gen/Network/AWS/AutoScalingPlans.hs",
        "gen/Network/AWS/AutoScalingPlans/CreateScalingPlan.hs",
        "gen/Network/AWS/AutoScalingPlans/DeleteScalingPlan.hs",
        "gen/Network/AWS/AutoScalingPlans/DescribeScalingPlanResources.hs",
        "gen/Network/AWS/AutoScalingPlans/DescribeScalingPlans.hs",
        "gen/Network/AWS/AutoScalingPlans/GetScalingPlanResourceForecastData.hs",
        "gen/Network/AWS/AutoScalingPlans/Lens.hs",
        "gen/Network/AWS/AutoScalingPlans/Types.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ApplicationSource.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/CustomizedLoadMetricSpecification.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/CustomizedScalingMetricSpecification.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/Datapoint.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ForecastDataType.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/LoadMetricType.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/MetricDimension.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/MetricStatistic.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/PolicyType.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/PredefinedLoadMetricSpecification.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/PredefinedScalingMetricSpecification.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/PredictiveScalingMaxCapacityBehavior.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/PredictiveScalingMode.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalableDimension.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingInstruction.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingMetricType.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingPlan.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingPlanResource.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingPlanStatusCode.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingPolicy.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingPolicyUpdateBehavior.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ScalingStatusCode.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/ServiceNamespace.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/TagFilter.hs",
        "gen/Network/AWS/AutoScalingPlans/Types/TargetTrackingConfiguration.hs",
        "gen/Network/AWS/AutoScalingPlans/UpdateScalingPlan.hs",
        "gen/Network/AWS/AutoScalingPlans/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_autoscaling_plans=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-autoscaling-plans/amazonka-autoscaling-plans.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-autoscaling-plans-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/AutoScalingPlans.hs",
        "test/Test/AWS/AutoScalingPlans/Internal.hs",
        "test/Test/AWS/Gen/AutoScalingPlans.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_autoscaling_plans=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-autoscaling-plans",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
