load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-sms/amazonka-sms.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-sms",
    srcs = [
        "gen/Network/AWS/SMS.hs",
        "gen/Network/AWS/SMS/CreateApp.hs",
        "gen/Network/AWS/SMS/CreateReplicationJob.hs",
        "gen/Network/AWS/SMS/DeleteApp.hs",
        "gen/Network/AWS/SMS/DeleteAppLaunchConfiguration.hs",
        "gen/Network/AWS/SMS/DeleteAppReplicationConfiguration.hs",
        "gen/Network/AWS/SMS/DeleteAppValidationConfiguration.hs",
        "gen/Network/AWS/SMS/DeleteReplicationJob.hs",
        "gen/Network/AWS/SMS/DeleteServerCatalog.hs",
        "gen/Network/AWS/SMS/DisassociateConnector.hs",
        "gen/Network/AWS/SMS/GenerateChangeSet.hs",
        "gen/Network/AWS/SMS/GenerateTemplate.hs",
        "gen/Network/AWS/SMS/GetApp.hs",
        "gen/Network/AWS/SMS/GetAppLaunchConfiguration.hs",
        "gen/Network/AWS/SMS/GetAppReplicationConfiguration.hs",
        "gen/Network/AWS/SMS/GetAppValidationConfiguration.hs",
        "gen/Network/AWS/SMS/GetAppValidationOutput.hs",
        "gen/Network/AWS/SMS/GetConnectors.hs",
        "gen/Network/AWS/SMS/GetReplicationJobs.hs",
        "gen/Network/AWS/SMS/GetReplicationRuns.hs",
        "gen/Network/AWS/SMS/GetServers.hs",
        "gen/Network/AWS/SMS/ImportAppCatalog.hs",
        "gen/Network/AWS/SMS/ImportServerCatalog.hs",
        "gen/Network/AWS/SMS/LaunchApp.hs",
        "gen/Network/AWS/SMS/Lens.hs",
        "gen/Network/AWS/SMS/ListApps.hs",
        "gen/Network/AWS/SMS/NotifyAppValidationOutput.hs",
        "gen/Network/AWS/SMS/PutAppLaunchConfiguration.hs",
        "gen/Network/AWS/SMS/PutAppReplicationConfiguration.hs",
        "gen/Network/AWS/SMS/PutAppValidationConfiguration.hs",
        "gen/Network/AWS/SMS/StartAppReplication.hs",
        "gen/Network/AWS/SMS/StartOnDemandAppReplication.hs",
        "gen/Network/AWS/SMS/StartOnDemandReplicationRun.hs",
        "gen/Network/AWS/SMS/StopAppReplication.hs",
        "gen/Network/AWS/SMS/TerminateApp.hs",
        "gen/Network/AWS/SMS/Types.hs",
        "gen/Network/AWS/SMS/Types/AppLaunchConfigurationStatus.hs",
        "gen/Network/AWS/SMS/Types/AppLaunchStatus.hs",
        "gen/Network/AWS/SMS/Types/AppReplicationConfigurationStatus.hs",
        "gen/Network/AWS/SMS/Types/AppReplicationStatus.hs",
        "gen/Network/AWS/SMS/Types/AppStatus.hs",
        "gen/Network/AWS/SMS/Types/AppSummary.hs",
        "gen/Network/AWS/SMS/Types/AppValidationConfiguration.hs",
        "gen/Network/AWS/SMS/Types/AppValidationOutput.hs",
        "gen/Network/AWS/SMS/Types/AppValidationStrategy.hs",
        "gen/Network/AWS/SMS/Types/Connector.hs",
        "gen/Network/AWS/SMS/Types/ConnectorCapability.hs",
        "gen/Network/AWS/SMS/Types/ConnectorStatus.hs",
        "gen/Network/AWS/SMS/Types/LaunchDetails.hs",
        "gen/Network/AWS/SMS/Types/LicenseType.hs",
        "gen/Network/AWS/SMS/Types/NotificationContext.hs",
        "gen/Network/AWS/SMS/Types/OutputFormat.hs",
        "gen/Network/AWS/SMS/Types/ReplicationJob.hs",
        "gen/Network/AWS/SMS/Types/ReplicationJobState.hs",
        "gen/Network/AWS/SMS/Types/ReplicationRun.hs",
        "gen/Network/AWS/SMS/Types/ReplicationRunStageDetails.hs",
        "gen/Network/AWS/SMS/Types/ReplicationRunState.hs",
        "gen/Network/AWS/SMS/Types/ReplicationRunType.hs",
        "gen/Network/AWS/SMS/Types/S3Location.hs",
        "gen/Network/AWS/SMS/Types/SSMOutput.hs",
        "gen/Network/AWS/SMS/Types/SSMValidationParameters.hs",
        "gen/Network/AWS/SMS/Types/ScriptType.hs",
        "gen/Network/AWS/SMS/Types/Server.hs",
        "gen/Network/AWS/SMS/Types/ServerCatalogStatus.hs",
        "gen/Network/AWS/SMS/Types/ServerGroup.hs",
        "gen/Network/AWS/SMS/Types/ServerGroupLaunchConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerGroupReplicationConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerGroupValidationConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerLaunchConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerReplicationConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerReplicationParameters.hs",
        "gen/Network/AWS/SMS/Types/ServerType.hs",
        "gen/Network/AWS/SMS/Types/ServerValidationConfiguration.hs",
        "gen/Network/AWS/SMS/Types/ServerValidationOutput.hs",
        "gen/Network/AWS/SMS/Types/ServerValidationStrategy.hs",
        "gen/Network/AWS/SMS/Types/Source.hs",
        "gen/Network/AWS/SMS/Types/Tag.hs",
        "gen/Network/AWS/SMS/Types/UserData.hs",
        "gen/Network/AWS/SMS/Types/UserDataValidationParameters.hs",
        "gen/Network/AWS/SMS/Types/ValidationOutput.hs",
        "gen/Network/AWS/SMS/Types/ValidationStatus.hs",
        "gen/Network/AWS/SMS/Types/VmManagerType.hs",
        "gen/Network/AWS/SMS/Types/VmServer.hs",
        "gen/Network/AWS/SMS/Types/VmServerAddress.hs",
        "gen/Network/AWS/SMS/UpdateApp.hs",
        "gen/Network/AWS/SMS/UpdateReplicationJob.hs",
        "gen/Network/AWS/SMS/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_sms=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-sms/amazonka-sms.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-sms-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/SMS.hs",
        "test/Test/AWS/SMS.hs",
        "test/Test/AWS/SMS/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_sms=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-sms",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
