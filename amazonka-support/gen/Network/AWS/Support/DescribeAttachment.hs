{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Support.DescribeAttachment
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Returns the attachment that has the specified ID. Attachments can
-- include screenshots, error logs, or other files that describe your
-- issue. Attachment IDs are generated by the case management system when
-- you add an attachment to a case or case communication. Attachment IDs
-- are returned in the AttachmentDetails objects that are returned by the
-- DescribeCommunications operation.
--
-- -   You must have a Business or Enterprise support plan to use the AWS
--     Support API.
--
-- -   If you call the AWS Support API from an account that does not have a
--     Business or Enterprise support plan, the
--     @SubscriptionRequiredException@ error message appears. For
--     information about changing your support plan, see
--     <http://aws.amazon.com/premiumsupport/ AWS Support>.
module Network.AWS.Support.DescribeAttachment
  ( -- * Creating a Request
    DescribeAttachment (..),
    newDescribeAttachment,

    -- * Request Lenses
    describeAttachment_attachmentId,

    -- * Destructuring the Response
    DescribeAttachmentResponse (..),
    newDescribeAttachmentResponse,

    -- * Response Lenses
    describeAttachmentResponse_attachment,
    describeAttachmentResponse_httpStatus,
  )
where

import qualified Network.AWS.Core as Core
import qualified Network.AWS.Lens as Lens
import qualified Network.AWS.Request as Request
import qualified Network.AWS.Response as Response
import Network.AWS.Support.Types

-- | /See:/ 'newDescribeAttachment' smart constructor.
data DescribeAttachment = DescribeAttachment'
  { -- | The ID of the attachment to return. Attachment IDs are returned by the
    -- DescribeCommunications operation.
    attachmentId :: Core.Text
  }
  deriving (Core.Eq, Core.Read, Core.Show, Core.Generic)

-- |
-- Create a value of 'DescribeAttachment' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'attachmentId', 'describeAttachment_attachmentId' - The ID of the attachment to return. Attachment IDs are returned by the
-- DescribeCommunications operation.
newDescribeAttachment ::
  -- | 'attachmentId'
  Core.Text ->
  DescribeAttachment
newDescribeAttachment pAttachmentId_ =
  DescribeAttachment' {attachmentId = pAttachmentId_}

-- | The ID of the attachment to return. Attachment IDs are returned by the
-- DescribeCommunications operation.
describeAttachment_attachmentId :: Lens.Lens' DescribeAttachment Core.Text
describeAttachment_attachmentId = Lens.lens (\DescribeAttachment' {attachmentId} -> attachmentId) (\s@DescribeAttachment' {} a -> s {attachmentId = a} :: DescribeAttachment)

instance Core.AWSRequest DescribeAttachment where
  type
    AWSResponse DescribeAttachment =
      DescribeAttachmentResponse
  request = Request.postJSON defaultService
  response =
    Response.receiveJSON
      ( \s h x ->
          DescribeAttachmentResponse'
            Core.<$> (x Core..?> "attachment")
            Core.<*> (Core.pure (Core.fromEnum s))
      )

instance Core.Hashable DescribeAttachment

instance Core.NFData DescribeAttachment

instance Core.ToHeaders DescribeAttachment where
  toHeaders =
    Core.const
      ( Core.mconcat
          [ "X-Amz-Target"
              Core.=# ( "AWSSupport_20130415.DescribeAttachment" ::
                          Core.ByteString
                      ),
            "Content-Type"
              Core.=# ("application/x-amz-json-1.1" :: Core.ByteString)
          ]
      )

instance Core.ToJSON DescribeAttachment where
  toJSON DescribeAttachment' {..} =
    Core.object
      ( Core.catMaybes
          [Core.Just ("attachmentId" Core..= attachmentId)]
      )

instance Core.ToPath DescribeAttachment where
  toPath = Core.const "/"

instance Core.ToQuery DescribeAttachment where
  toQuery = Core.const Core.mempty

-- | The content and file name of the attachment returned by the
-- DescribeAttachment operation.
--
-- /See:/ 'newDescribeAttachmentResponse' smart constructor.
data DescribeAttachmentResponse = DescribeAttachmentResponse'
  { -- | This object includes the attachment content and file name.
    --
    -- In the previous response syntax, the value for the @data@ parameter
    -- appears as @blob@, which is represented as a base64-encoded string. The
    -- value for @fileName@ is the name of the attachment, such as
    -- @troubleshoot-screenshot.png@.
    attachment :: Core.Maybe Attachment,
    -- | The response's http status code.
    httpStatus :: Core.Int
  }
  deriving (Core.Eq, Core.Read, Core.Show, Core.Generic)

-- |
-- Create a value of 'DescribeAttachmentResponse' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'attachment', 'describeAttachmentResponse_attachment' - This object includes the attachment content and file name.
--
-- In the previous response syntax, the value for the @data@ parameter
-- appears as @blob@, which is represented as a base64-encoded string. The
-- value for @fileName@ is the name of the attachment, such as
-- @troubleshoot-screenshot.png@.
--
-- 'httpStatus', 'describeAttachmentResponse_httpStatus' - The response's http status code.
newDescribeAttachmentResponse ::
  -- | 'httpStatus'
  Core.Int ->
  DescribeAttachmentResponse
newDescribeAttachmentResponse pHttpStatus_ =
  DescribeAttachmentResponse'
    { attachment =
        Core.Nothing,
      httpStatus = pHttpStatus_
    }

-- | This object includes the attachment content and file name.
--
-- In the previous response syntax, the value for the @data@ parameter
-- appears as @blob@, which is represented as a base64-encoded string. The
-- value for @fileName@ is the name of the attachment, such as
-- @troubleshoot-screenshot.png@.
describeAttachmentResponse_attachment :: Lens.Lens' DescribeAttachmentResponse (Core.Maybe Attachment)
describeAttachmentResponse_attachment = Lens.lens (\DescribeAttachmentResponse' {attachment} -> attachment) (\s@DescribeAttachmentResponse' {} a -> s {attachment = a} :: DescribeAttachmentResponse)

-- | The response's http status code.
describeAttachmentResponse_httpStatus :: Lens.Lens' DescribeAttachmentResponse Core.Int
describeAttachmentResponse_httpStatus = Lens.lens (\DescribeAttachmentResponse' {httpStatus} -> httpStatus) (\s@DescribeAttachmentResponse' {} a -> s {httpStatus = a} :: DescribeAttachmentResponse)

instance Core.NFData DescribeAttachmentResponse
