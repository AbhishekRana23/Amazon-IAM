load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-organizations/amazonka-organizations.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-organizations",
    srcs = [
        "gen/Network/AWS/Organizations.hs",
        "gen/Network/AWS/Organizations/AcceptHandshake.hs",
        "gen/Network/AWS/Organizations/AttachPolicy.hs",
        "gen/Network/AWS/Organizations/CancelHandshake.hs",
        "gen/Network/AWS/Organizations/CreateAccount.hs",
        "gen/Network/AWS/Organizations/CreateGovCloudAccount.hs",
        "gen/Network/AWS/Organizations/CreateOrganization.hs",
        "gen/Network/AWS/Organizations/CreateOrganizationalUnit.hs",
        "gen/Network/AWS/Organizations/CreatePolicy.hs",
        "gen/Network/AWS/Organizations/DeclineHandshake.hs",
        "gen/Network/AWS/Organizations/DeleteOrganization.hs",
        "gen/Network/AWS/Organizations/DeleteOrganizationalUnit.hs",
        "gen/Network/AWS/Organizations/DeletePolicy.hs",
        "gen/Network/AWS/Organizations/DeregisterDelegatedAdministrator.hs",
        "gen/Network/AWS/Organizations/DescribeAccount.hs",
        "gen/Network/AWS/Organizations/DescribeCreateAccountStatus.hs",
        "gen/Network/AWS/Organizations/DescribeEffectivePolicy.hs",
        "gen/Network/AWS/Organizations/DescribeHandshake.hs",
        "gen/Network/AWS/Organizations/DescribeOrganization.hs",
        "gen/Network/AWS/Organizations/DescribeOrganizationalUnit.hs",
        "gen/Network/AWS/Organizations/DescribePolicy.hs",
        "gen/Network/AWS/Organizations/DetachPolicy.hs",
        "gen/Network/AWS/Organizations/DisableAWSServiceAccess.hs",
        "gen/Network/AWS/Organizations/DisablePolicyType.hs",
        "gen/Network/AWS/Organizations/EnableAWSServiceAccess.hs",
        "gen/Network/AWS/Organizations/EnableAllFeatures.hs",
        "gen/Network/AWS/Organizations/EnablePolicyType.hs",
        "gen/Network/AWS/Organizations/InviteAccountToOrganization.hs",
        "gen/Network/AWS/Organizations/LeaveOrganization.hs",
        "gen/Network/AWS/Organizations/Lens.hs",
        "gen/Network/AWS/Organizations/ListAWSServiceAccessForOrganization.hs",
        "gen/Network/AWS/Organizations/ListAccounts.hs",
        "gen/Network/AWS/Organizations/ListAccountsForParent.hs",
        "gen/Network/AWS/Organizations/ListChildren.hs",
        "gen/Network/AWS/Organizations/ListCreateAccountStatus.hs",
        "gen/Network/AWS/Organizations/ListDelegatedAdministrators.hs",
        "gen/Network/AWS/Organizations/ListDelegatedServicesForAccount.hs",
        "gen/Network/AWS/Organizations/ListHandshakesForAccount.hs",
        "gen/Network/AWS/Organizations/ListHandshakesForOrganization.hs",
        "gen/Network/AWS/Organizations/ListOrganizationalUnitsForParent.hs",
        "gen/Network/AWS/Organizations/ListParents.hs",
        "gen/Network/AWS/Organizations/ListPolicies.hs",
        "gen/Network/AWS/Organizations/ListPoliciesForTarget.hs",
        "gen/Network/AWS/Organizations/ListRoots.hs",
        "gen/Network/AWS/Organizations/ListTagsForResource.hs",
        "gen/Network/AWS/Organizations/ListTargetsForPolicy.hs",
        "gen/Network/AWS/Organizations/MoveAccount.hs",
        "gen/Network/AWS/Organizations/RegisterDelegatedAdministrator.hs",
        "gen/Network/AWS/Organizations/RemoveAccountFromOrganization.hs",
        "gen/Network/AWS/Organizations/TagResource.hs",
        "gen/Network/AWS/Organizations/Types.hs",
        "gen/Network/AWS/Organizations/Types/Account.hs",
        "gen/Network/AWS/Organizations/Types/AccountJoinedMethod.hs",
        "gen/Network/AWS/Organizations/Types/AccountStatus.hs",
        "gen/Network/AWS/Organizations/Types/ActionType.hs",
        "gen/Network/AWS/Organizations/Types/Child.hs",
        "gen/Network/AWS/Organizations/Types/ChildType.hs",
        "gen/Network/AWS/Organizations/Types/CreateAccountFailureReason.hs",
        "gen/Network/AWS/Organizations/Types/CreateAccountState.hs",
        "gen/Network/AWS/Organizations/Types/CreateAccountStatus.hs",
        "gen/Network/AWS/Organizations/Types/DelegatedAdministrator.hs",
        "gen/Network/AWS/Organizations/Types/DelegatedService.hs",
        "gen/Network/AWS/Organizations/Types/EffectivePolicy.hs",
        "gen/Network/AWS/Organizations/Types/EffectivePolicyType.hs",
        "gen/Network/AWS/Organizations/Types/EnabledServicePrincipal.hs",
        "gen/Network/AWS/Organizations/Types/Handshake.hs",
        "gen/Network/AWS/Organizations/Types/HandshakeFilter.hs",
        "gen/Network/AWS/Organizations/Types/HandshakeParty.hs",
        "gen/Network/AWS/Organizations/Types/HandshakePartyType.hs",
        "gen/Network/AWS/Organizations/Types/HandshakeResource.hs",
        "gen/Network/AWS/Organizations/Types/HandshakeResourceType.hs",
        "gen/Network/AWS/Organizations/Types/HandshakeState.hs",
        "gen/Network/AWS/Organizations/Types/IAMUserAccessToBilling.hs",
        "gen/Network/AWS/Organizations/Types/Organization.hs",
        "gen/Network/AWS/Organizations/Types/OrganizationFeatureSet.hs",
        "gen/Network/AWS/Organizations/Types/OrganizationalUnit.hs",
        "gen/Network/AWS/Organizations/Types/Parent.hs",
        "gen/Network/AWS/Organizations/Types/ParentType.hs",
        "gen/Network/AWS/Organizations/Types/Policy.hs",
        "gen/Network/AWS/Organizations/Types/PolicySummary.hs",
        "gen/Network/AWS/Organizations/Types/PolicyTargetSummary.hs",
        "gen/Network/AWS/Organizations/Types/PolicyType.hs",
        "gen/Network/AWS/Organizations/Types/PolicyTypeStatus.hs",
        "gen/Network/AWS/Organizations/Types/PolicyTypeSummary.hs",
        "gen/Network/AWS/Organizations/Types/Root.hs",
        "gen/Network/AWS/Organizations/Types/Tag.hs",
        "gen/Network/AWS/Organizations/Types/TargetType.hs",
        "gen/Network/AWS/Organizations/UntagResource.hs",
        "gen/Network/AWS/Organizations/UpdateOrganizationalUnit.hs",
        "gen/Network/AWS/Organizations/UpdatePolicy.hs",
        "gen/Network/AWS/Organizations/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_organizations=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-organizations/amazonka-organizations.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-organizations-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/Organizations.hs",
        "test/Test/AWS/Organizations.hs",
        "test/Test/AWS/Organizations/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_organizations=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-organizations",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
