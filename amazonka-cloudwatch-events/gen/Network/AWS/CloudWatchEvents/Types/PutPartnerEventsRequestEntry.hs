{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.CloudWatchEvents.Types.PutPartnerEventsRequestEntry
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.CloudWatchEvents.Types.PutPartnerEventsRequestEntry where

import qualified Network.AWS.Core as Core
import qualified Network.AWS.Lens as Lens

-- | The details about an event generated by an SaaS partner.
--
-- /See:/ 'newPutPartnerEventsRequestEntry' smart constructor.
data PutPartnerEventsRequestEntry = PutPartnerEventsRequestEntry'
  { -- | A free-form string used to decide what fields to expect in the event
    -- detail.
    detailType :: Core.Maybe Core.Text,
    -- | The event source that is generating the evntry.
    source :: Core.Maybe Core.Text,
    -- | A valid JSON string. There is no other schema imposed. The JSON string
    -- may contain fields and nested subobjects.
    detail :: Core.Maybe Core.Text,
    -- | AWS resources, identified by Amazon Resource Name (ARN), which the event
    -- primarily concerns. Any number, including zero, may be present.
    resources :: Core.Maybe [Core.Text],
    -- | The date and time of the event.
    time :: Core.Maybe Core.POSIX
  }
  deriving (Core.Eq, Core.Read, Core.Show, Core.Generic)

-- |
-- Create a value of 'PutPartnerEventsRequestEntry' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'detailType', 'putPartnerEventsRequestEntry_detailType' - A free-form string used to decide what fields to expect in the event
-- detail.
--
-- 'source', 'putPartnerEventsRequestEntry_source' - The event source that is generating the evntry.
--
-- 'detail', 'putPartnerEventsRequestEntry_detail' - A valid JSON string. There is no other schema imposed. The JSON string
-- may contain fields and nested subobjects.
--
-- 'resources', 'putPartnerEventsRequestEntry_resources' - AWS resources, identified by Amazon Resource Name (ARN), which the event
-- primarily concerns. Any number, including zero, may be present.
--
-- 'time', 'putPartnerEventsRequestEntry_time' - The date and time of the event.
newPutPartnerEventsRequestEntry ::
  PutPartnerEventsRequestEntry
newPutPartnerEventsRequestEntry =
  PutPartnerEventsRequestEntry'
    { detailType =
        Core.Nothing,
      source = Core.Nothing,
      detail = Core.Nothing,
      resources = Core.Nothing,
      time = Core.Nothing
    }

-- | A free-form string used to decide what fields to expect in the event
-- detail.
putPartnerEventsRequestEntry_detailType :: Lens.Lens' PutPartnerEventsRequestEntry (Core.Maybe Core.Text)
putPartnerEventsRequestEntry_detailType = Lens.lens (\PutPartnerEventsRequestEntry' {detailType} -> detailType) (\s@PutPartnerEventsRequestEntry' {} a -> s {detailType = a} :: PutPartnerEventsRequestEntry)

-- | The event source that is generating the evntry.
putPartnerEventsRequestEntry_source :: Lens.Lens' PutPartnerEventsRequestEntry (Core.Maybe Core.Text)
putPartnerEventsRequestEntry_source = Lens.lens (\PutPartnerEventsRequestEntry' {source} -> source) (\s@PutPartnerEventsRequestEntry' {} a -> s {source = a} :: PutPartnerEventsRequestEntry)

-- | A valid JSON string. There is no other schema imposed. The JSON string
-- may contain fields and nested subobjects.
putPartnerEventsRequestEntry_detail :: Lens.Lens' PutPartnerEventsRequestEntry (Core.Maybe Core.Text)
putPartnerEventsRequestEntry_detail = Lens.lens (\PutPartnerEventsRequestEntry' {detail} -> detail) (\s@PutPartnerEventsRequestEntry' {} a -> s {detail = a} :: PutPartnerEventsRequestEntry)

-- | AWS resources, identified by Amazon Resource Name (ARN), which the event
-- primarily concerns. Any number, including zero, may be present.
putPartnerEventsRequestEntry_resources :: Lens.Lens' PutPartnerEventsRequestEntry (Core.Maybe [Core.Text])
putPartnerEventsRequestEntry_resources = Lens.lens (\PutPartnerEventsRequestEntry' {resources} -> resources) (\s@PutPartnerEventsRequestEntry' {} a -> s {resources = a} :: PutPartnerEventsRequestEntry) Core.. Lens.mapping Lens._Coerce

-- | The date and time of the event.
putPartnerEventsRequestEntry_time :: Lens.Lens' PutPartnerEventsRequestEntry (Core.Maybe Core.UTCTime)
putPartnerEventsRequestEntry_time = Lens.lens (\PutPartnerEventsRequestEntry' {time} -> time) (\s@PutPartnerEventsRequestEntry' {} a -> s {time = a} :: PutPartnerEventsRequestEntry) Core.. Lens.mapping Core._Time

instance Core.Hashable PutPartnerEventsRequestEntry

instance Core.NFData PutPartnerEventsRequestEntry

instance Core.ToJSON PutPartnerEventsRequestEntry where
  toJSON PutPartnerEventsRequestEntry' {..} =
    Core.object
      ( Core.catMaybes
          [ ("DetailType" Core..=) Core.<$> detailType,
            ("Source" Core..=) Core.<$> source,
            ("Detail" Core..=) Core.<$> detail,
            ("Resources" Core..=) Core.<$> resources,
            ("Time" Core..=) Core.<$> time
          ]
      )
