load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-serverlessrepo/amazonka-serverlessrepo.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-serverlessrepo",
    srcs = [
        "gen/Network/AWS/ServerlessApplicationRepository.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/CreateApplication.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/CreateApplicationVersion.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/CreateCloudFormationChangeSet.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/CreateCloudFormationTemplate.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/DeleteApplication.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/GetApplication.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/GetApplicationPolicy.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/GetCloudFormationTemplate.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Lens.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/ListApplicationDependencies.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/ListApplicationVersions.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/ListApplications.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/PutApplicationPolicy.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/ApplicationDependencySummary.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/ApplicationPolicyStatement.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/ApplicationSummary.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/Capability.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/ParameterDefinition.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/ParameterValue.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/RollbackConfiguration.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/RollbackTrigger.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/Status.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/Tag.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/Version.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Types/VersionSummary.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/UnshareApplication.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/UpdateApplication.hs",
        "gen/Network/AWS/ServerlessApplicationRepository/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_serverlessrepo=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-serverlessrepo/amazonka-serverlessrepo.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-serverlessrepo-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/ServerlessApplicationRepository.hs",
        "test/Test/AWS/ServerlessApplicationRepository.hs",
        "test/Test/AWS/ServerlessApplicationRepository/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_serverlessrepo=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-serverlessrepo",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
