load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-kinesis/amazonka-kinesis.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-kinesis",
    srcs = [
        "gen/Network/AWS/Kinesis.hs",
        "gen/Network/AWS/Kinesis/AddTagsToStream.hs",
        "gen/Network/AWS/Kinesis/CreateStream.hs",
        "gen/Network/AWS/Kinesis/DecreaseStreamRetentionPeriod.hs",
        "gen/Network/AWS/Kinesis/DeleteStream.hs",
        "gen/Network/AWS/Kinesis/DeregisterStreamConsumer.hs",
        "gen/Network/AWS/Kinesis/DescribeLimits.hs",
        "gen/Network/AWS/Kinesis/DescribeStream.hs",
        "gen/Network/AWS/Kinesis/DescribeStreamConsumer.hs",
        "gen/Network/AWS/Kinesis/DescribeStreamSummary.hs",
        "gen/Network/AWS/Kinesis/DisableEnhancedMonitoring.hs",
        "gen/Network/AWS/Kinesis/EnableEnhancedMonitoring.hs",
        "gen/Network/AWS/Kinesis/GetRecords.hs",
        "gen/Network/AWS/Kinesis/GetShardIterator.hs",
        "gen/Network/AWS/Kinesis/IncreaseStreamRetentionPeriod.hs",
        "gen/Network/AWS/Kinesis/Lens.hs",
        "gen/Network/AWS/Kinesis/ListShards.hs",
        "gen/Network/AWS/Kinesis/ListStreamConsumers.hs",
        "gen/Network/AWS/Kinesis/ListStreams.hs",
        "gen/Network/AWS/Kinesis/ListTagsForStream.hs",
        "gen/Network/AWS/Kinesis/MergeShards.hs",
        "gen/Network/AWS/Kinesis/PutRecord.hs",
        "gen/Network/AWS/Kinesis/PutRecords.hs",
        "gen/Network/AWS/Kinesis/RegisterStreamConsumer.hs",
        "gen/Network/AWS/Kinesis/RemoveTagsFromStream.hs",
        "gen/Network/AWS/Kinesis/SplitShard.hs",
        "gen/Network/AWS/Kinesis/StartStreamEncryption.hs",
        "gen/Network/AWS/Kinesis/StopStreamEncryption.hs",
        "gen/Network/AWS/Kinesis/SubscribeToShard.hs",
        "gen/Network/AWS/Kinesis/Types.hs",
        "gen/Network/AWS/Kinesis/Types/ChildShard.hs",
        "gen/Network/AWS/Kinesis/Types/Consumer.hs",
        "gen/Network/AWS/Kinesis/Types/ConsumerDescription.hs",
        "gen/Network/AWS/Kinesis/Types/ConsumerStatus.hs",
        "gen/Network/AWS/Kinesis/Types/EncryptionType.hs",
        "gen/Network/AWS/Kinesis/Types/EnhancedMetrics.hs",
        "gen/Network/AWS/Kinesis/Types/EnhancedMonitoringOutput.hs",
        "gen/Network/AWS/Kinesis/Types/HashKeyRange.hs",
        "gen/Network/AWS/Kinesis/Types/MetricsName.hs",
        "gen/Network/AWS/Kinesis/Types/PutRecordsRequestEntry.hs",
        "gen/Network/AWS/Kinesis/Types/PutRecordsResultEntry.hs",
        "gen/Network/AWS/Kinesis/Types/Record.hs",
        "gen/Network/AWS/Kinesis/Types/ScalingType.hs",
        "gen/Network/AWS/Kinesis/Types/SequenceNumberRange.hs",
        "gen/Network/AWS/Kinesis/Types/Shard.hs",
        "gen/Network/AWS/Kinesis/Types/ShardFilter.hs",
        "gen/Network/AWS/Kinesis/Types/ShardFilterType.hs",
        "gen/Network/AWS/Kinesis/Types/ShardIteratorType.hs",
        "gen/Network/AWS/Kinesis/Types/StartingPosition.hs",
        "gen/Network/AWS/Kinesis/Types/StreamDescription.hs",
        "gen/Network/AWS/Kinesis/Types/StreamDescriptionSummary.hs",
        "gen/Network/AWS/Kinesis/Types/StreamStatus.hs",
        "gen/Network/AWS/Kinesis/Types/SubscribeToShardEvent.hs",
        "gen/Network/AWS/Kinesis/Types/Tag.hs",
        "gen/Network/AWS/Kinesis/UpdateShardCount.hs",
        "gen/Network/AWS/Kinesis/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_kinesis=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-kinesis/amazonka-kinesis.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-kinesis-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/Gen/Kinesis.hs",
        "test/Test/AWS/Kinesis.hs",
        "test/Test/AWS/Kinesis/Internal.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_kinesis=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-kinesis",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
