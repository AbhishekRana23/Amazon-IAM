{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.CodePipeline.Types.ListWebhookItem
-- Copyright   : (c) 2013-2021 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Network.AWS.CodePipeline.Types.ListWebhookItem where

import Network.AWS.CodePipeline.Types.Tag
import Network.AWS.CodePipeline.Types.WebhookDefinition
import qualified Network.AWS.Core as Core
import qualified Network.AWS.Lens as Lens

-- | The detail returned for each webhook after listing webhooks, such as the
-- webhook URL, the webhook name, and the webhook ARN.
--
-- /See:/ 'newListWebhookItem' smart constructor.
data ListWebhookItem = ListWebhookItem'
  { -- | The date and time a webhook was last successfully triggered, in
    -- timestamp format.
    lastTriggered :: Core.Maybe Core.POSIX,
    -- | The Amazon Resource Name (ARN) of the webhook.
    arn :: Core.Maybe Core.Text,
    -- | Specifies the tags applied to the webhook.
    tags :: Core.Maybe [Tag],
    -- | The text of the error message about the webhook.
    errorMessage :: Core.Maybe Core.Text,
    -- | The number code of the error.
    errorCode :: Core.Maybe Core.Text,
    -- | The detail returned for each webhook, such as the webhook authentication
    -- type and filter rules.
    definition :: WebhookDefinition,
    -- | A unique URL generated by CodePipeline. When a POST request is made to
    -- this URL, the defined pipeline is started as long as the body of the
    -- post request satisfies the defined authentication and filtering
    -- conditions. Deleting and re-creating a webhook makes the old URL invalid
    -- and generates a new one.
    url :: Core.Text
  }
  deriving (Core.Eq, Core.Read, Core.Show, Core.Generic)

-- |
-- Create a value of 'ListWebhookItem' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'lastTriggered', 'listWebhookItem_lastTriggered' - The date and time a webhook was last successfully triggered, in
-- timestamp format.
--
-- 'arn', 'listWebhookItem_arn' - The Amazon Resource Name (ARN) of the webhook.
--
-- 'tags', 'listWebhookItem_tags' - Specifies the tags applied to the webhook.
--
-- 'errorMessage', 'listWebhookItem_errorMessage' - The text of the error message about the webhook.
--
-- 'errorCode', 'listWebhookItem_errorCode' - The number code of the error.
--
-- 'definition', 'listWebhookItem_definition' - The detail returned for each webhook, such as the webhook authentication
-- type and filter rules.
--
-- 'url', 'listWebhookItem_url' - A unique URL generated by CodePipeline. When a POST request is made to
-- this URL, the defined pipeline is started as long as the body of the
-- post request satisfies the defined authentication and filtering
-- conditions. Deleting and re-creating a webhook makes the old URL invalid
-- and generates a new one.
newListWebhookItem ::
  -- | 'definition'
  WebhookDefinition ->
  -- | 'url'
  Core.Text ->
  ListWebhookItem
newListWebhookItem pDefinition_ pUrl_ =
  ListWebhookItem'
    { lastTriggered = Core.Nothing,
      arn = Core.Nothing,
      tags = Core.Nothing,
      errorMessage = Core.Nothing,
      errorCode = Core.Nothing,
      definition = pDefinition_,
      url = pUrl_
    }

-- | The date and time a webhook was last successfully triggered, in
-- timestamp format.
listWebhookItem_lastTriggered :: Lens.Lens' ListWebhookItem (Core.Maybe Core.UTCTime)
listWebhookItem_lastTriggered = Lens.lens (\ListWebhookItem' {lastTriggered} -> lastTriggered) (\s@ListWebhookItem' {} a -> s {lastTriggered = a} :: ListWebhookItem) Core.. Lens.mapping Core._Time

-- | The Amazon Resource Name (ARN) of the webhook.
listWebhookItem_arn :: Lens.Lens' ListWebhookItem (Core.Maybe Core.Text)
listWebhookItem_arn = Lens.lens (\ListWebhookItem' {arn} -> arn) (\s@ListWebhookItem' {} a -> s {arn = a} :: ListWebhookItem)

-- | Specifies the tags applied to the webhook.
listWebhookItem_tags :: Lens.Lens' ListWebhookItem (Core.Maybe [Tag])
listWebhookItem_tags = Lens.lens (\ListWebhookItem' {tags} -> tags) (\s@ListWebhookItem' {} a -> s {tags = a} :: ListWebhookItem) Core.. Lens.mapping Lens._Coerce

-- | The text of the error message about the webhook.
listWebhookItem_errorMessage :: Lens.Lens' ListWebhookItem (Core.Maybe Core.Text)
listWebhookItem_errorMessage = Lens.lens (\ListWebhookItem' {errorMessage} -> errorMessage) (\s@ListWebhookItem' {} a -> s {errorMessage = a} :: ListWebhookItem)

-- | The number code of the error.
listWebhookItem_errorCode :: Lens.Lens' ListWebhookItem (Core.Maybe Core.Text)
listWebhookItem_errorCode = Lens.lens (\ListWebhookItem' {errorCode} -> errorCode) (\s@ListWebhookItem' {} a -> s {errorCode = a} :: ListWebhookItem)

-- | The detail returned for each webhook, such as the webhook authentication
-- type and filter rules.
listWebhookItem_definition :: Lens.Lens' ListWebhookItem WebhookDefinition
listWebhookItem_definition = Lens.lens (\ListWebhookItem' {definition} -> definition) (\s@ListWebhookItem' {} a -> s {definition = a} :: ListWebhookItem)

-- | A unique URL generated by CodePipeline. When a POST request is made to
-- this URL, the defined pipeline is started as long as the body of the
-- post request satisfies the defined authentication and filtering
-- conditions. Deleting and re-creating a webhook makes the old URL invalid
-- and generates a new one.
listWebhookItem_url :: Lens.Lens' ListWebhookItem Core.Text
listWebhookItem_url = Lens.lens (\ListWebhookItem' {url} -> url) (\s@ListWebhookItem' {} a -> s {url = a} :: ListWebhookItem)

instance Core.FromJSON ListWebhookItem where
  parseJSON =
    Core.withObject
      "ListWebhookItem"
      ( \x ->
          ListWebhookItem'
            Core.<$> (x Core..:? "lastTriggered")
            Core.<*> (x Core..:? "arn")
            Core.<*> (x Core..:? "tags" Core..!= Core.mempty)
            Core.<*> (x Core..:? "errorMessage")
            Core.<*> (x Core..:? "errorCode")
            Core.<*> (x Core..: "definition")
            Core.<*> (x Core..: "url")
      )

instance Core.Hashable ListWebhookItem

instance Core.NFData ListWebhookItem
