load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-health/amazonka-health.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-health",
    srcs = [
        "gen/Network/AWS/AWSHealth.hs",
        "gen/Network/AWS/AWSHealth/DescribeAffectedAccountsForOrganization.hs",
        "gen/Network/AWS/AWSHealth/DescribeAffectedEntities.hs",
        "gen/Network/AWS/AWSHealth/DescribeAffectedEntitiesForOrganization.hs",
        "gen/Network/AWS/AWSHealth/DescribeEntityAggregates.hs",
        "gen/Network/AWS/AWSHealth/DescribeEventAggregates.hs",
        "gen/Network/AWS/AWSHealth/DescribeEventDetails.hs",
        "gen/Network/AWS/AWSHealth/DescribeEventDetailsForOrganization.hs",
        "gen/Network/AWS/AWSHealth/DescribeEventTypes.hs",
        "gen/Network/AWS/AWSHealth/DescribeEvents.hs",
        "gen/Network/AWS/AWSHealth/DescribeEventsForOrganization.hs",
        "gen/Network/AWS/AWSHealth/DescribeHealthServiceStatusForOrganization.hs",
        "gen/Network/AWS/AWSHealth/DisableHealthServiceAccessForOrganization.hs",
        "gen/Network/AWS/AWSHealth/EnableHealthServiceAccessForOrganization.hs",
        "gen/Network/AWS/AWSHealth/Lens.hs",
        "gen/Network/AWS/AWSHealth/Types.hs",
        "gen/Network/AWS/AWSHealth/Types/AffectedEntity.hs",
        "gen/Network/AWS/AWSHealth/Types/DateTimeRange.hs",
        "gen/Network/AWS/AWSHealth/Types/EntityAggregate.hs",
        "gen/Network/AWS/AWSHealth/Types/EntityFilter.hs",
        "gen/Network/AWS/AWSHealth/Types/EntityStatusCode.hs",
        "gen/Network/AWS/AWSHealth/Types/Event.hs",
        "gen/Network/AWS/AWSHealth/Types/EventAccountFilter.hs",
        "gen/Network/AWS/AWSHealth/Types/EventAggregate.hs",
        "gen/Network/AWS/AWSHealth/Types/EventAggregateField.hs",
        "gen/Network/AWS/AWSHealth/Types/EventDescription.hs",
        "gen/Network/AWS/AWSHealth/Types/EventDetails.hs",
        "gen/Network/AWS/AWSHealth/Types/EventDetailsErrorItem.hs",
        "gen/Network/AWS/AWSHealth/Types/EventFilter.hs",
        "gen/Network/AWS/AWSHealth/Types/EventScopeCode.hs",
        "gen/Network/AWS/AWSHealth/Types/EventStatusCode.hs",
        "gen/Network/AWS/AWSHealth/Types/EventType.hs",
        "gen/Network/AWS/AWSHealth/Types/EventTypeCategory.hs",
        "gen/Network/AWS/AWSHealth/Types/EventTypeFilter.hs",
        "gen/Network/AWS/AWSHealth/Types/OrganizationAffectedEntitiesErrorItem.hs",
        "gen/Network/AWS/AWSHealth/Types/OrganizationEvent.hs",
        "gen/Network/AWS/AWSHealth/Types/OrganizationEventDetails.hs",
        "gen/Network/AWS/AWSHealth/Types/OrganizationEventDetailsErrorItem.hs",
        "gen/Network/AWS/AWSHealth/Types/OrganizationEventFilter.hs",
        "gen/Network/AWS/AWSHealth/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_health=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-health/amazonka-health.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-health-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/AWSHealth.hs",
        "test/Test/AWS/AWSHealth/Internal.hs",
        "test/Test/AWS/Gen/AWSHealth.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_health=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-health",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
