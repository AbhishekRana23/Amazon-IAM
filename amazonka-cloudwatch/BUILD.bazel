load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from amazonka-cloudwatch/amazonka-cloudwatch.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-cloudwatch",
    srcs = [
        "gen/Network/AWS/CloudWatch.hs",
        "gen/Network/AWS/CloudWatch/DeleteAlarms.hs",
        "gen/Network/AWS/CloudWatch/DeleteAnomalyDetector.hs",
        "gen/Network/AWS/CloudWatch/DeleteDashboards.hs",
        "gen/Network/AWS/CloudWatch/DeleteInsightRules.hs",
        "gen/Network/AWS/CloudWatch/DeleteMetricStream.hs",
        "gen/Network/AWS/CloudWatch/DescribeAlarmHistory.hs",
        "gen/Network/AWS/CloudWatch/DescribeAlarms.hs",
        "gen/Network/AWS/CloudWatch/DescribeAlarmsForMetric.hs",
        "gen/Network/AWS/CloudWatch/DescribeAnomalyDetectors.hs",
        "gen/Network/AWS/CloudWatch/DescribeInsightRules.hs",
        "gen/Network/AWS/CloudWatch/DisableAlarmActions.hs",
        "gen/Network/AWS/CloudWatch/DisableInsightRules.hs",
        "gen/Network/AWS/CloudWatch/EnableAlarmActions.hs",
        "gen/Network/AWS/CloudWatch/EnableInsightRules.hs",
        "gen/Network/AWS/CloudWatch/GetDashboard.hs",
        "gen/Network/AWS/CloudWatch/GetInsightRuleReport.hs",
        "gen/Network/AWS/CloudWatch/GetMetricData.hs",
        "gen/Network/AWS/CloudWatch/GetMetricStatistics.hs",
        "gen/Network/AWS/CloudWatch/GetMetricStream.hs",
        "gen/Network/AWS/CloudWatch/GetMetricWidgetImage.hs",
        "gen/Network/AWS/CloudWatch/Lens.hs",
        "gen/Network/AWS/CloudWatch/ListDashboards.hs",
        "gen/Network/AWS/CloudWatch/ListMetricStreams.hs",
        "gen/Network/AWS/CloudWatch/ListMetrics.hs",
        "gen/Network/AWS/CloudWatch/ListTagsForResource.hs",
        "gen/Network/AWS/CloudWatch/PutAnomalyDetector.hs",
        "gen/Network/AWS/CloudWatch/PutCompositeAlarm.hs",
        "gen/Network/AWS/CloudWatch/PutDashboard.hs",
        "gen/Network/AWS/CloudWatch/PutInsightRule.hs",
        "gen/Network/AWS/CloudWatch/PutMetricAlarm.hs",
        "gen/Network/AWS/CloudWatch/PutMetricData.hs",
        "gen/Network/AWS/CloudWatch/PutMetricStream.hs",
        "gen/Network/AWS/CloudWatch/SetAlarmState.hs",
        "gen/Network/AWS/CloudWatch/StartMetricStreams.hs",
        "gen/Network/AWS/CloudWatch/StopMetricStreams.hs",
        "gen/Network/AWS/CloudWatch/TagResource.hs",
        "gen/Network/AWS/CloudWatch/Types.hs",
        "gen/Network/AWS/CloudWatch/Types/AlarmHistoryItem.hs",
        "gen/Network/AWS/CloudWatch/Types/AlarmType.hs",
        "gen/Network/AWS/CloudWatch/Types/AnomalyDetector.hs",
        "gen/Network/AWS/CloudWatch/Types/AnomalyDetectorConfiguration.hs",
        "gen/Network/AWS/CloudWatch/Types/AnomalyDetectorStateValue.hs",
        "gen/Network/AWS/CloudWatch/Types/ComparisonOperator.hs",
        "gen/Network/AWS/CloudWatch/Types/CompositeAlarm.hs",
        "gen/Network/AWS/CloudWatch/Types/DashboardEntry.hs",
        "gen/Network/AWS/CloudWatch/Types/DashboardValidationMessage.hs",
        "gen/Network/AWS/CloudWatch/Types/Datapoint.hs",
        "gen/Network/AWS/CloudWatch/Types/Dimension.hs",
        "gen/Network/AWS/CloudWatch/Types/DimensionFilter.hs",
        "gen/Network/AWS/CloudWatch/Types/HistoryItemType.hs",
        "gen/Network/AWS/CloudWatch/Types/InsightRule.hs",
        "gen/Network/AWS/CloudWatch/Types/InsightRuleContributor.hs",
        "gen/Network/AWS/CloudWatch/Types/InsightRuleContributorDatapoint.hs",
        "gen/Network/AWS/CloudWatch/Types/InsightRuleMetricDatapoint.hs",
        "gen/Network/AWS/CloudWatch/Types/LabelOptions.hs",
        "gen/Network/AWS/CloudWatch/Types/MessageData.hs",
        "gen/Network/AWS/CloudWatch/Types/Metric.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricAlarm.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricDataQuery.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricDataResult.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricDatum.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricStat.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricStreamEntry.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricStreamFilter.hs",
        "gen/Network/AWS/CloudWatch/Types/MetricStreamOutputFormat.hs",
        "gen/Network/AWS/CloudWatch/Types/PartialFailure.hs",
        "gen/Network/AWS/CloudWatch/Types/Range.hs",
        "gen/Network/AWS/CloudWatch/Types/RecentlyActive.hs",
        "gen/Network/AWS/CloudWatch/Types/ScanBy.hs",
        "gen/Network/AWS/CloudWatch/Types/StandardUnit.hs",
        "gen/Network/AWS/CloudWatch/Types/StateValue.hs",
        "gen/Network/AWS/CloudWatch/Types/Statistic.hs",
        "gen/Network/AWS/CloudWatch/Types/StatisticSet.hs",
        "gen/Network/AWS/CloudWatch/Types/StatusCode.hs",
        "gen/Network/AWS/CloudWatch/Types/Tag.hs",
        "gen/Network/AWS/CloudWatch/UntagResource.hs",
        "gen/Network/AWS/CloudWatch/Waiters.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_cloudwatch=\"1.6.1\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    hidden_modules = [],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        "//amazonka",
        "@stackage//:base",
    ],
)

# rule generated from amazonka-cloudwatch/amazonka-cloudwatch.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-cloudwatch-test",
    srcs = [
        "test/Main.hs",
        "test/Test/AWS/CloudWatch.hs",
        "test/Test/AWS/CloudWatch/Internal.hs",
        "test/Test/AWS/Gen/CloudWatch.hs",
    ],
    compiler_flags = [
        "-DVERSION_amazonka_cloudwatch=\"1.6.1\"",
        "-Wall",
        "-threaded",
    ],
    tags = ["ci"],
    version = "1.6.1",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-cloudwatch",
        "//amazonka",
        "//test:amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
